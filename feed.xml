<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.2">Jekyll</generator><link href="https://blog.bladefirelight.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://blog.bladefirelight.com/" rel="alternate" type="text/html" /><updated>2018-06-06T22:35:58-05:00</updated><id>https://blog.bladefirelight.com/</id><title type="html">PowerShell Journey</title><subtitle>Random musings of a IT Pro</subtitle><author><name>David Jones</name><email>BladeFireLight@outlook.com</email></author><entry><title type="html">Collecting CA Certificates for DSC Configuration</title><link href="https://blog.bladefirelight.com/nuggets/collecting-ca-certificates-for-dsc-configuration/" rel="alternate" type="text/html" title="Collecting CA Certificates for DSC Configuration" /><published>2017-04-21T00:00:00-05:00</published><updated>2017-04-21T00:00:00-05:00</updated><id>https://blog.bladefirelight.com/nuggets/collecting-ca-certificates-for-dsc-configuration</id><content type="html" xml:base="https://blog.bladefirelight.com/nuggets/collecting-ca-certificates-for-dsc-configuration/">&lt;h2 id=&quot;the-goal&quot;&gt;The Goal&lt;/h2&gt;

&lt;p&gt;Microsoft PFE Ashely McGlone &lt;a href=&quot;https://blogs.msdn.microsoft.com/powershell/2015/10/01/powershell-dsc-faq-sorting-out-certificates/&quot;&gt;recommends&lt;/a&gt; that each node managed by DSC (Desired State Configuration) have unique certificate for protecting credentials.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.bladefirelight.com/assets/images/MofCredSecurity.png&quot; alt=&quot;Mof Credential Security Chart&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;Starting in WMF 5.0 .MOF are &lt;a href=&quot;https://msdn.microsoft.com/en-us/powershell/wmf/5.0/dsc_encryptedmof&quot;&gt;encrypted at rest&lt;/a&gt; on the Node. But that is not the case for the file on the pull server. So I’m going on the assumption that this is still a best practice.&lt;/p&gt;

&lt;p&gt;The problem with that is getting the certificates either from the node or from a CA (Certificate Authority) to the DSC development workstation or CI/CD (Continuous Integration/Continuous Deployment) server. I’m going to cover one method.&lt;/p&gt;

&lt;h2 id=&quot;pre-requisites&quot;&gt;Pre-requisites&lt;/h2&gt;

&lt;p&gt;For this I’m going to be using &lt;a href=&quot;https://github.com/theJasonHelmick/PS-AutoLab-Env&quot;&gt;PowerShell Automated Lab Environment&lt;/a&gt; and it’s Configuration called “devops-powershell-fundamentals”&lt;/p&gt;

&lt;p&gt;This will generate the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;DC1 - Domain Controller and Certificate Authority&lt;/li&gt;
  &lt;li&gt;S1, S2 - Member servers&lt;/li&gt;
  &lt;li&gt;N1 - Nano server (not used)&lt;/li&gt;
  &lt;li&gt;Cli1 - Windows 10 workstation&lt;/li&gt;
  &lt;li&gt;NAT virtual switch and static IP’s&lt;/li&gt;
  &lt;li&gt;Certificate Template called “DSC Template”&lt;/li&gt;
  &lt;li&gt;Auto-Enrollment GPO&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once that is up and running we can connect to cli1 via PowerShell Direct&lt;/p&gt;

&lt;h2 id=&quot;demo&quot;&gt;Demo&lt;/h2&gt;

&lt;p&gt;I’m going to start with installing PKITools from the PowerShell Gallery  (and selecting Yes to install NuGet and allow use of untrusted rpo, this is new lab after all)&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Install-Module PKITools
Get-Command -Module PkiTools

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
&lt;span class=&quot;k&quot;&gt;Function        &lt;/span&gt;Get-ADCertificateTemplate                          1.6        PkiTools
&lt;span class=&quot;k&quot;&gt;Function        &lt;/span&gt;Get-CaLocationString                               1.6        PkiTools
&lt;span class=&quot;k&quot;&gt;Function        &lt;/span&gt;Get-CertificatAuthority                            1.6        PkiTools
&lt;span class=&quot;k&quot;&gt;Function        &lt;/span&gt;Get-CertificateTemplateOID                         1.6        PkiTools
&lt;span class=&quot;k&quot;&gt;Function        &lt;/span&gt;Get-IssuedCertificate                              1.6        PkiTools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The one I want to focus on is Get-IssuedCertificate. As part of a DSC build process I want to collect the public certificates for each node. Pulling the certificate from each node is one option, but not practical in large network, and may not even be be possible due to lack of connectivity. Thankfully all the public certificates also reside on the Certificate Authority that issues them.&lt;/p&gt;

&lt;p&gt;In our lab there is only one domain and one CA (also the DC. no not do that in production) So the code will be simple.&lt;/p&gt;

&lt;p&gt;First lets look at the parameters.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SYNTAX
    Get-IssuedCertificate &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;-ExpireInDays] &amp;lt;Int32&amp;gt;] &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;-CAlocation] &amp;lt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&amp;gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;-Properties] &amp;lt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&amp;gt;]&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;-CertificateTemplateOid] &amp;lt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;-CommonName] &amp;lt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;-Credential] &amp;lt;PSCredential&amp;gt;] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&amp;lt;CommonParameters&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;No parameters are required. lets see what it does&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hv01]: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Cli1]: &lt;span class=&quot;nb&quot;&gt;PS &lt;/span&gt;C:\&amp;gt; Get-IssuedCertificate


Issued Common Name          :
Certificate Expiration Date : 4/18/2018 3:40:05 AM
Certificate Effective Date  : 4/18/2017 3:40:05 AM
Certificate Template        : 1.3.6.1.4.1.311.21.8.8376484.9891361.12404633.14452813.1016466.111.1.29
Issued Request ID           : 2
Certificate Hash            : f2 4e db 00 12 19 68 79 98 0b 6a 95 47 6d 7a c6 a7 40 e7 63
Request Disposition Message : Issued
Requester Name              : COMPANY\DC1&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
Binary Certificate          : -----BEGIN CERTIFICATE-----
                              MIIF6jCCBNKgAwIBAgITUQAAAAL5xXyLo72OVAAAAAAAAjANBgkqhkiG9w0BAQsF
                              ADBZMRAwDgYDVQQKEwdDb21wYW55MRAwDgYDVQQIEwdBcml6b25hMRAwDgYDVQQH
                              EwdQaG9lbml4MQswCQYDVQQGEwJVUzEUMBIGA1UEAxMLQ29tcGFueS5QcmkwHhcN
                              MTcwNDE4MDM0MDA1WhcNMTgwNDE4MDM0MDA1WjAAMIIBIjANBgkqhkiG9w0BAQEF
                              AAOCAQ8AMIIBCgKCAQEAxjtOVDCixBoUEOWG1WKwPqw0DY77upmE0E4Bfc6CV94g
                              X5ewYtagk7f8KvfigDaoq20qCNzFfaBprseL/0JoKPBY05Ws9O98pfAP639MGP6U
                              MCbgXZ8ILhtoWZCqHi+S8UVyu7D2meyyl54IgeoVcb0MBISWoGyyJ5tzAWYX1XQL
                              /0tnQ4YoWRcJulW7Qvn0kUhk6ooe9Mot4gCD0jPE/QjJ/loJDHO+aCRxsMwEil87
                              KqGKfEcS54dV+g6wRhgxlrfi8b1NDwhKcpgglSzhtmBEUY72m1S5AxuL7V90ZxNU
                              NQ/CBboy98NKri8RbmyvypAQ47MMyadVVmPLsAgGJwIDAQABo4IDAjCCAv4wNgYJ
                              KwYBBAGCNxUHBCkwJwYfKwYBBAGCNxUIg/+hJITb3CGF9Y8ZhvKQTb6FEm8BHQIB
                              cwIBADAUBgNVHSUEDTALBgkrBgEEAYI3FRMwDgYDVR0PAQH/BAQDAgWgMBwGCSsG
                              AQQBgjcVCgQPMA0wCwYJKwYBBAGCNxUTMHgGCSqGSIb3DQEJDwRrMGkwDgYIKoZI
                              hvcNAwICAgCAMA4GCCqGSIb3DQMEAgIAgDALBglghkgBZQMEASowCwYJYIZIAWUD
                              BAEtMAsGCWCGSAFlAwQBAjALBglghkgBZQMEAQUwBwYFKw4DAgcwCgYIKoZIhvcN
                              AwcwHQYDVR0OBBYEFOB1zbkBT8m9NW7DRh7xW13OjSmLMB8GA1UdIwQYMBaAFA+9
                              p4ww6yyPs/vD4ugUNRM24pWIMIHFBgNVHR8Egb0wgbowgbeggbSggbGGga5sZGFw
                              Oi8vL0NOPUNvbXBhbnkuUHJpLENOPURDMSxDTj1DRFAsQ049UHVibGljJTIwS2V5
                              JTIwU2VydmljZXMsQ049U2VydmljZXMsQ049Q29uZmlndXJhdGlvbixEQz1Db21w
                              YW55LERDPVByaT9jZXJ0aWZpY2F0ZVJldm9jYXRpb25MaXN0P2Jhc2U/b2JqZWN0
                              Q2xhc3M9Y1JMRGlzdHJpYnV0aW9uUG9pbnQwgb0GCCsGAQUFBwEBBIGwMIGtMIGq
                              BggrBgEFBQcwAoaBnWxkYXA6Ly8vQ049Q29tcGFueS5QcmksQ049QUlBLENOPVB1
                              YmxpYyUyMEtleSUyMFNlcnZpY2VzLENOPVNlcnZpY2VzLENOPUNvbmZpZ3VyYXRp
                              b24sREM9Q29tcGFueSxEQz1Qcmk/Y0FDZXJ0aWZpY2F0ZT9iYXNlP29iamVjdENs
                              YXNzPWNlcnRpZmljYXRpb25BdXRob3JpdHkwPgYDVR0RAQH/BDQwMqAfBgkrBgEE
                              AYI3GQGgEgQQezARELeYdUOiN2P2QTxNl4IPREMxLkNvbXBhbnkuUHJpMA0GCSqG
                              SIb3DQEBCwUAA4IBAQBCV12I9eIaFLRFsgzbhMizfufvtCOI/EKAOsEYCxI9HFKJ
                              H2HfC0lh7eEZABFQKPNx8XgCHCm5skzdR5oHLbtTwrnky2YJkFnuNOgTF/tuunoU
                              p3+X0Kk3YH88wrv+YPE37PtqF/fJnZvEUzPfxRiaiOFaTisEIXfAxTvVYVBSwK9H
                              oSgH5GTEblvlmiw6LD7JZYqrmYFCPQdB/mj+aOPjyeFClneGH2u8sxKCZHiJ/RWX
                              wQJn8DO5ACctnLC8mH70HR5vVRJ0yFX6vrpnRyJEBSpawAYFK1vPf7Wks+gLSw4q
                              g7ASEJG/MJK0oJpBosOKKGr+jMnEx6BTs1NJ3d0l
                              -----END CERTIFICATE-----

PSComputerName              : DC1.Company.Pri
RunspaceId                  : 146e5d7a-b85a-4540-9360-fea7413a9978

Issued Common Name          :
Certificate Expiration Date : 4/18/2018 3:40:07 AM
Certificate Effective Date  : 4/18/2017 3:40:07 AM
Certificate Template        : 1.3.6.1.4.1.311.21.8.8376484.9891361.12404633.14452813.1016466.111.1.28

~~~~~~~~SNIP~~~~~~~~~~~~~

                              BgkrBgEEAYI3UAEwHQYDVR0OBBYEFKYaQhzh28O8Sy4jBG5/63E59OzBMB8GA1Ud
                              IwQYMBaAFA+9p4ww6yyPs/vD4ugUNRM24pWIMIHFBgNVHR8Egb0wgbowgbeggbSg
                              gbGGga5sZGFwOi8vL0NOPUNvbXBhbnkuUHJpLENOPURDMSxDTj1DRFAsQ049UHVi
                              bGljJTIwS2V5JTIwU2VydmljZXMsQ049U2VydmljZXMsQ049Q29uZmlndXJhdGlv
                              bixEQz1Db21wYW55LERDPVByaT9jZXJ0aWZpY2F0ZVJldm9jYXRpb25MaXN0P2Jh
                              c2U/b2JqZWN0Q2xhc3M9Y1JMRGlzdHJpYnV0aW9uUG9pbnQwgb0GCCsGAQUFBwEB
                              BIGwMIGtMIGqBggrBgEFBQcwAoaBnWxkYXA6Ly8vQ049Q29tcGFueS5QcmksQ049
                              QUlBLENOPVB1YmxpYyUyMEtleSUyMFNlcnZpY2VzLENOPVNlcnZpY2VzLENOPUNv
                              bmZpZ3VyYXRpb24sREM9Q29tcGFueSxEQz1Qcmk/Y0FDZXJ0aWZpY2F0ZT9iYXNl
                              P29iamVjdENsYXNzPWNlcnRpZmljYXRpb25BdXRob3JpdHkwGwYDVR0RBBQwEoIQ
                              Q2xpMS5Db21wYW55LlByaTANBgkqhkiG9w0BAQsFAAOCAQEAFt8fD8dq7WdYxldl
                              648SS8KkqEeqUv4cBXt5/GBLBO/Cr7JB1m5K8U3VrjzwMgyU4n01h0xeJxYeHIvA
                              WZ1Fy8BXSzurH3MOcbC0jKuqezzXAJIpVAfkHB0UBKx+OnZes21aGXjb0ZHTv+lv
                              3lx6Wrc051RD+eDDLz0/+kLU6MRgJHTO8qlgRDRjRSqU7dcU1TKFmpij1IzWjvJb
                              GU2qHCfAnhWr8b+lMjvRMXkBxQjRF9kmMdhQxhR+nWN0/056wpr7/bukwGzPBKAU
                              HfFNFXqNT8nc79rB7IW4T6xZteEm0zG/TTNpIjL74/MGDBzFG3MTDE3i6ks9DoF/
                              &lt;span class=&quot;nv&quot;&gt;9XDyDg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
                              -----END CERTIFICATE-----

PSComputerName              : DC1.Company.Pri
RunspaceId                  : 146e5d7a-b85a-4540-9360-fea7413a9978
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That got every issued certificate for every CA on the current domain. More then I need. Obviously we need to trim that down to just the DSC certificates. for that we will need to specify -CertificateTemplateOID. Lets look at the help for that parameter.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hv01]: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Cli1]: &lt;span class=&quot;nb&quot;&gt;PS &lt;/span&gt;C:\&amp;gt; &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;Get-IssuedCertificate -Parameter CertificateTemplateOid

-CertificateTemplateOid &amp;lt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;Filter &lt;/span&gt;on Certificate Template OID &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;use Get-CertificateTemplateOID&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    Required?                    &lt;span class=&quot;nb&quot;&gt;false
    &lt;/span&gt;Position?                    4
    Default value
    Accept pipeline input?       &lt;span class=&quot;nb&quot;&gt;false
    &lt;/span&gt;Accept wildcard characters?  &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Good it has a function to get the OID lets look at that.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SYNTAX
    Get-CertificateTemplateOID &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-Name] &amp;lt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;-Domain] &amp;lt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-WhatIf] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-Confirm] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&amp;lt;CommonParameters&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Only the -Name is required. That I know.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hv01]: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Cli1]: &lt;span class=&quot;nb&quot;&gt;PS &lt;/span&gt;C:\&amp;gt; Get-CertificateTemplateOID DSCTemplate
1.3.6.1.4.1.311.21.8.16187918.14945684.15749023.11519519.4925321.197.13392998.8282280
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And I though GUIDS were an eye full.&lt;/p&gt;

&lt;p&gt;Get-IssuedCertificate also has a -Propterties paramaters lets look at that.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hv01]: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Cli1]: &lt;span class=&quot;nb&quot;&gt;PS &lt;/span&gt;C:\&amp;gt; &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;Get-IssuedCertificate -Parameter Properties

-Properties &amp;lt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&amp;gt;&lt;/span&gt;
    Fields &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the Certificate Authority Database to Export

    Required?                    &lt;span class=&quot;nb&quot;&gt;false
    &lt;/span&gt;Position?                    3
    Default value                &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;s1&quot;&gt;'Issued Common Name'&lt;/span&gt;,
                &lt;span class=&quot;s1&quot;&gt;'Certificate Expiration Date'&lt;/span&gt;,
                &lt;span class=&quot;s1&quot;&gt;'Certificate Effective Date'&lt;/span&gt;,
                &lt;span class=&quot;s1&quot;&gt;'Certificate Template'&lt;/span&gt;,
                &lt;span class=&quot;c1&quot;&gt;#'Issued Email Address',&lt;/span&gt;
                &lt;span class=&quot;s1&quot;&gt;'Issued Request ID'&lt;/span&gt;,
                &lt;span class=&quot;s1&quot;&gt;'Certificate Hash'&lt;/span&gt;,
                &lt;span class=&quot;c1&quot;&gt;#'Request Disposition',&lt;/span&gt;
                &lt;span class=&quot;s1&quot;&gt;'Request Disposition Message'&lt;/span&gt;,
                &lt;span class=&quot;s1&quot;&gt;'Requester Name'&lt;/span&gt;,
            &lt;span class=&quot;s1&quot;&gt;'Binary Certificate'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    Accept pipeline input?       &lt;span class=&quot;nb&quot;&gt;false
    &lt;/span&gt;Accept wildcard characters?  &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For collecting the Certificates I only need the ‘Issued Common Name’ and ‘Binary Certificate’&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hv01]: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Cli1]: &lt;span class=&quot;nb&quot;&gt;PS &lt;/span&gt;C:\&amp;gt; &lt;span class=&quot;nv&quot;&gt;$DSCCerts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Get-IssuedCertificate -CertificateTemplateOid &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Get-CertificateTemplateOID -Name &lt;span class=&quot;s1&quot;&gt;'DSC
Template'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; -Properties &lt;span class=&quot;s1&quot;&gt;'Issued Common Name'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'Binary Certificate'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hv01]: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Cli1]: &lt;span class=&quot;nb&quot;&gt;PS &lt;/span&gt;C:\&amp;gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hv01]: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Cli1]: &lt;span class=&quot;nb&quot;&gt;PS &lt;/span&gt;C:\&amp;gt; &lt;span class=&quot;nv&quot;&gt;$DSCCerts&lt;/span&gt;.Count
4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So that got me 4 certs. Now I can step through each one and save them.&lt;/p&gt;

&lt;div class=&quot;language-powershell pre-wrap highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hv01]: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Cli1]: &lt;span class=&quot;nb&quot;&gt;PS &lt;/span&gt;C:\&amp;gt; &lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;c:\certs


    Directory: C:\


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-----        4/21/2017   7:12 AM                certs


&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hv01]: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Cli1]: &lt;span class=&quot;nb&quot;&gt;PS &lt;/span&gt;C:\&amp;gt; &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cert&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$DSCCerts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;set-content&lt;/span&gt; -path &lt;span class=&quot;s2&quot;&gt;&quot;c:\certs\&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cert&lt;/span&gt;.&lt;span class=&quot;s1&quot;&gt;'Issued Common Name'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.cer&quot;&lt;/span&gt; -Value &lt;span class=&quot;nv&quot;&gt;$cert&lt;/span&gt;.&lt;span class=&quot;s1&quot;&gt;'Binary Certificate'&lt;/span&gt; -Encoding Ascii
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;hv01]: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Cli1]: &lt;span class=&quot;nb&quot;&gt;PS &lt;/span&gt;C:\&amp;gt; &lt;span class=&quot;nb&quot;&gt;dir &lt;/span&gt;c:\certs


    Directory: C:\certs


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----        4/21/2017   7:12 AM           1982 Cli1.Company.Pri.cer
-a----        4/21/2017   7:12 AM           1978 DC1.Company.Pri.cer
-a----        4/21/2017   7:12 AM           1972 S1.Company.Pri.cer
-a----        4/21/2017   7:12 AM           1972 S2.Company.Pri.cer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now I have the certificate files for each node I can use for DSC.&lt;/p&gt;</content><author><name>David Jones</name><email>BladeFireLight@outlook.com</email></author><category term="DSC" /><category term="PKI" /><summary type="html">Best practice is to use individual certificates for each Node for DSC. While you can use auto enrollment, getting the certificates to where the MOF are build can be a problem. This is one solution</summary></entry><entry><title type="html">Windows Image Tools \| Creating an Updated Image Part 3</title><link href="https://blog.bladefirelight.com/windowsimagetools/Creating-an-Updateed-Image-Part3-Updates/" rel="alternate" type="text/html" title="Windows Image Tools \| Creating an Updated Image Part 3" /><published>2016-10-12T16:48:59-05:00</published><updated>2016-10-12T16:48:59-05:00</updated><id>https://blog.bladefirelight.com/windowsimagetools/Creating-an-Updateed-Image-Part3-Updates</id><content type="html" xml:base="https://blog.bladefirelight.com/windowsimagetools/Creating-an-Updateed-Image-Part3-Updates/">&lt;h2 id=&quot;plan-for-today&quot;&gt;Plan for today&lt;/h2&gt;

&lt;p&gt;The end game is in site. Now that I have 2 images with WMF 5. it’s time to apply all the Windows Updates.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;If you are folowing along you shoudl have a WindowsImageTools Update directory with two images. A striped down Core image, and all you can eat GUI image for source.&lt;/p&gt;

&lt;h2 id=&quot;kicking-off-updates&quot;&gt;Kicking off Updates&lt;/h2&gt;

&lt;p&gt;First off I’m going to run the updates. There are a nubmer of ways to do this, Invoke-WindowsUpdate can target individual images or all the images in our Update folders, and it can control the output.
Because i’m doing source and small core images. I will update each image separately, and export the WIM only for the source, and shrink the Core&lt;/p&gt;

&lt;p&gt;Lets start with the source&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;get-date
&lt;/span&gt;Invoke-WindowsImageUpdate -Path G:\Blog_Example -output Both -ImageName Srv2012r2_Core -ReduceImageSize -Verbose
&lt;span class=&quot;nb&quot;&gt;get-date
&lt;/span&gt;Invoke-WindowsImageUpdate -Path G:\Blog_Example -output WIM -ImageName Srv2012r2_Source -Verbose
&lt;span class=&quot;nb&quot;&gt;get-date&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;pre-wrap highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Wednesday, October 12, 2016 12:26:17 AM
VERBOSE: [Invoke-WindowsImageUpdate] : Validateing [Srv2012r2_Core]
VERBOSE: [Invoke-WindowsImageUpdate] : Validateing VM switch config
VERBOSE: Performing the operation &quot;Download required Modules&quot; on target &quot;PowerShell Gallery&quot;.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\PackageManagement\1.0.0.1\PackageManagement.psd1'.
VERBOSE: Loading 'FormatsToProcess' from path 'C:\Program Files\WindowsPowerShell\Modules\PackageManagement\1.0.0.1\PackageManagement.format.ps1xml'.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\PackageManagement\1.0.0.1\Microsoft.PowerShell.PackageManagement.dll'.
VERBOSE: Exporting cmdlet 'Find-Package'.
VERBOSE: Exporting cmdlet 'Get-Package'.
VERBOSE: Exporting cmdlet 'Get-PackageProvider'.
VERBOSE: Exporting cmdlet 'Get-PackageSource'.
VERBOSE: Exporting cmdlet 'Install-Package'.
VERBOSE: Exporting cmdlet 'Import-PackageProvider'.
VERBOSE: Exporting cmdlet 'Find-PackageProvider'.
VERBOSE: Exporting cmdlet 'Install-PackageProvider'.
VERBOSE: Exporting cmdlet 'Register-PackageSource'.
VERBOSE: Exporting cmdlet 'Save-Package'.
VERBOSE: Exporting cmdlet 'Set-PackageSource'.
VERBOSE: Exporting cmdlet 'Uninstall-Package'.
VERBOSE: Exporting cmdlet 'Unregister-PackageSource'.
VERBOSE: Importing cmdlet 'Find-Package'.
VERBOSE: Importing cmdlet 'Find-PackageProvider'.
VERBOSE: Importing cmdlet 'Get-Package'.
VERBOSE: Importing cmdlet 'Get-PackageProvider'.
VERBOSE: Importing cmdlet 'Get-PackageSource'.
VERBOSE: Importing cmdlet 'Import-PackageProvider'.
VERBOSE: Importing cmdlet 'Install-Package'.
VERBOSE: Importing cmdlet 'Install-PackageProvider'.
VERBOSE: Importing cmdlet 'Register-PackageSource'.
VERBOSE: Importing cmdlet 'Save-Package'.
VERBOSE: Importing cmdlet 'Set-PackageSource'.
VERBOSE: Importing cmdlet 'Uninstall-Package'.
VERBOSE: Importing cmdlet 'Unregister-PackageSource'.
VERBOSE: [Invoke-WindowsImageUpdate] : Geting latest PSWindowsUpdate
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: The -Repository parameter was not specified.  PowerShellGet will use all of the registered repositories.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is 'https://www.powershellgallery.com/api/v2/' and PackageManagementProvider is 'NuGet'.
VERBOSE: Searching repository 'https://www.powershellgallery.com/api/v2/FindPackagesById()?id='PSWindowsUpdate'' for ''.
VERBOSE: Total package yield:'1' for the specified package 'PSWindowsUpdate'.
VERBOSE: Performing the operation &quot;Save Package&quot; on target &quot;'PSWindowsUpdate' to location 'G:\Blog_Example\Resource\Modules'&quot;.
VERBOSE: The specified module will be installed in 'G:\Blog_Example\Resource\Modules'.
VERBOSE: The specified Location is 'NuGet' and PackageManagementProvider is 'NuGet'.
VERBOSE: Downloading module 'PSWindowsUpdate' with version '1.5.2.2' from the repository 'https://www.powershellgallery.com/api/v2/'.
VERBOSE: Searching repository 'https://www.powershellgallery.com/api/v2/FindPackagesById()?id='PSWindowsUpdate'' for ''.
VERBOSE: InstallPackage' - name='PSWindowsUpdate', version='1.5.2.2',destination='C:\Users\Blade_000\AppData\Local\Temp\239759536'
VERBOSE: DownloadPackage' - name='PSWindowsUpdate', version='1.5.2.2',destination='C:\Users\Blade_000\AppData\Local\Temp\239759536\PSWindowsUpdate\PSWindowsUpdate.nupkg', uri='https://www.powershellgallery.com/api/v2/package/PSWindowsUpdate/1.5.2.2'
VERBOSE: Downloading 'https://www.powershellgallery.com/api/v2/package/PSWindowsUpdate/1.5.2.2'.
VERBOSE: Completed downloading 'https://www.powershellgallery.com/api/v2/package/PSWindowsUpdate/1.5.2.2'.
VERBOSE: Completed downloading 'PSWindowsUpdate'.
VERBOSE: Hash for package 'PSWindowsUpdate' does not match hash provided from the server.
VERBOSE: InstallPackageLocal' - name='PSWindowsUpdate', version='1.5.2.2',destination='C:\Users\Blade_000\AppData\Local\Temp\239759536'
VERBOSE: Module 'PSWindowsUpdate' was saved successfully to path 'G:\Blog_Example\Resource\Modules\PSWindowsUpdate\1.5.2.2'.
VERBOSE: Performing the operation &quot;Invoke Windows Updates on Image&quot; on target &quot;Srv2012r2_Core&quot;.
VERBOSE: [Invoke-WindowsImageUpdate] : Windows Update : New Diff Disk : Creating G:\Blog_Example\BaseImage\Srv2012r2_Core_Update.vhdx from G:\Blog_Example\BaseImage\Srv2012r2_Core_base.vhdx
VERBOSE: New-VHD will create a new virtual hard disk with the path &quot;G:\Blog_Example\BaseImage\Srv2012r2_Core_Update.vhdx&quot;.
VERBOSE: [Invoke-WindowsImageUpdate] : Windows Update : Adding PSWindowsUpdate Module to G:\Blog_Example\BaseImage\Srv2012r2_Core_Update.vhdx
VERBOSE: [Invoke-WindowsImageUpdate] : Windows Update : updateting AtStartup script
VERBOSE: Sidebyside detected in PSWindowsUpdate : switching to v4 compatability
VERBOSE: [createRunAndWaitVM] : Creating VM 40floaow at 10/12/2016 00:26:34
VERBOSE: [createRunAndWaitVM] : VM 40floaow Stoped
VERBOSE: [createRunAndWaitVM] : VM 40floaow Deleted at 10/12/2016 02:25:36
VERBOSE: [Invoke-WindowsImageUpdate] : Windows Update : Changes detected : Merging G:\Blog_Example\BaseImage\Srv2012r2_Core_Update.vhdx into G:\Blog_Example\BaseImage\Srv2012r2_Core_base.vhdx
VERBOSE: Merge-VHD will merge the virtual hard disk &quot;g:\blog_example\baseimage\srv2012r2_core_update.vhdx&quot; into its parent &quot;g:\blog_example\baseimage\srv2012r2_core_base.vhdx&quot;.
Wednesday, October 12, 2016 2:28:08 AM
VERBOSE: [Invoke-WindowsImageUpdate] : Validateing [Srv2012r2_Source]
VERBOSE: [Invoke-WindowsImageUpdate] : Validateing VM switch config
VERBOSE: Performing the operation &quot;Download required Modules&quot; on target &quot;PowerShell Gallery&quot;.
VERBOSE: [Invoke-WindowsImageUpdate] : Geting latest PSWindowsUpdate
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: The -Repository parameter was not specified.  PowerShellGet will use all of the registered repositories.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is 'https://www.powershellgallery.com/api/v2/' and PackageManagementProvider is 'NuGet'.
VERBOSE: Searching repository 'https://www.powershellgallery.com/api/v2/FindPackagesById()?id='PSWindowsUpdate'' for ''.
VERBOSE: Total package yield:'1' for the specified package 'PSWindowsUpdate'.
VERBOSE: Performing the operation &quot;Save Package&quot; on target &quot;'PSWindowsUpdate' to location 'G:\Blog_Example\Resource\Modules'&quot;.
VERBOSE: The specified module will be installed in 'G:\Blog_Example\Resource\Modules'.
VERBOSE: The specified Location is 'NuGet' and PackageManagementProvider is 'NuGet'.
VERBOSE: Downloading module 'PSWindowsUpdate' with version '1.5.2.2' from the repository 'https://www.powershellgallery.com/api/v2/'.
VERBOSE: Searching repository 'https://www.powershellgallery.com/api/v2/FindPackagesById()?id='PSWindowsUpdate'' for ''.
VERBOSE: InstallPackage' - name='PSWindowsUpdate', version='1.5.2.2',destination='C:\Users\Blade_000\AppData\Local\Temp\1874556358'
VERBOSE: DownloadPackage' - name='PSWindowsUpdate', version='1.5.2.2',destination='C:\Users\Blade_000\AppData\Local\Temp\1874556358\PSWindowsUpdate\PSWindowsUpdate.nupkg', uri='https://www.powershellgallery.com/api/v2/package/PSWindowsUpdate/1.5.2.2'
VERBOSE: Downloading 'https://www.powershellgallery.com/api/v2/package/PSWindowsUpdate/1.5.2.2'.
VERBOSE: Completed downloading 'https://www.powershellgallery.com/api/v2/package/PSWindowsUpdate/1.5.2.2'.
VERBOSE: Completed downloading 'PSWindowsUpdate'.
VERBOSE: Hash for package 'PSWindowsUpdate' does not match hash provided from the server.
VERBOSE: InstallPackageLocal' - name='PSWindowsUpdate', version='1.5.2.2',destination='C:\Users\Blade_000\AppData\Local\Temp\1874556358'
VERBOSE: Module 'PSWindowsUpdate' was saved successfully to path 'G:\Blog_Example\Resource\Modules\PSWindowsUpdate\1.5.2.2'.
VERBOSE: Performing the operation &quot;Invoke Windows Updates on Image&quot; on target &quot;Srv2012r2_Source&quot;.
VERBOSE: [Invoke-WindowsImageUpdate] : Windows Update : New Diff Disk : Creating G:\Blog_Example\BaseImage\Srv2012r2_Source_Update.vhdx from G:\Blog_Example\BaseImage\Srv2012r2_Source_base.vhdx
VERBOSE: New-VHD will create a new virtual hard disk with the path &quot;G:\Blog_Example\BaseImage\Srv2012r2_Source_Update.vhdx&quot;.
VERBOSE: [Invoke-WindowsImageUpdate] : Windows Update : Adding PSWindowsUpdate Module to G:\Blog_Example\BaseImage\Srv2012r2_Source_Update.vhdx
VERBOSE: [Invoke-WindowsImageUpdate] : Windows Update : updateting AtStartup script
VERBOSE: Sidebyside detected in PSWindowsUpdate : switching to v4 compatability
VERBOSE: [createRunAndWaitVM] : Creating VM 5dvm2bu2 at 10/12/2016 02:28:24
VERBOSE: [createRunAndWaitVM] : VM 5dvm2bu2 Stoped
VERBOSE: [createRunAndWaitVM] : VM 5dvm2bu2 Deleted at 10/12/2016 05:30:56
VERBOSE: [Invoke-WindowsImageUpdate] : Windows Update : Changes detected : Merging G:\Blog_Example\BaseImage\Srv2012r2_Source_Update.vhdx into G:\Blog_Example\BaseImage\Srv2012r2_Source_base.vhdx
VERBOSE: Merge-VHD will merge the virtual hard disk &quot;g:\blog_example\baseimage\srv2012r2_source_update.vhdx&quot; into its parent &quot;g:\blog_example\baseimage\srv2012r2_source_base.vhdx&quot;.
VERBOSE: [Invoke-WindowsImageUpdate] : SysPrep : New Diff Disk : Creating G:\Blog_Example\BaseImage\Srv2012r2_Source_Sysprep.vhdx from G:\Blog_Example\BaseImage\Srv2012r2_Source_base.vhdx
VERBOSE: New-VHD will create a new virtual hard disk with the path &quot;G:\Blog_Example\BaseImage\Srv2012r2_Source_Sysprep.vhdx&quot;.
VERBOSE: [Invoke-WindowsImageUpdate] : SysPrep : updateting AtStartup script
VERBOSE: [Invoke-WindowsImageUpdate] : SysPrep : Creating temp vm and waiting
VERBOSE: [createRunAndWaitVM] : Creating VM 4nxvrw5x at 10/12/2016 05:34:45
VERBOSE: [createRunAndWaitVM] : VM 4nxvrw5x Stoped
VERBOSE: [createRunAndWaitVM] : VM 4nxvrw5x Deleted at 10/12/2016 05:41:37
VERBOSE: [Invoke-WindowsImageUpdate] : SysPrep : Removing PageFile and PsTemp
VERBOSE: [Invoke-WindowsImageUpdate] : SysPrep : Cleaning SxS
VERBOSE: [Invoke-WindowsImageUpdate] : WIM : Creating G:\Blog_Example\UpdatedImageShare\Srv2012r2_Source.wim
VERBOSE: [Invoke-WindowsImageUpdate] : WIM : removing G:\Blog_Example\BaseImage\Srv2012r2_Source_Sysprep.vhdx
Wednesday, October 12, 2016 6:19:52 AM
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After a few hours I have a a fully patched system.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;G:\Blog_Example\UpdatedImageShare

    Directory: G:\Blog_Example\UpdatedImageShare

Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----        9/27/2016   3:24 PM     7541358592 Srv2012r2_Core.vhdx 
-a----        9/27/2016   3:14 PM     3415926982 Srv2012r2_Core.wim
-a----        9/26/2016   6:36 PM     4523302203 Srv2012r2_Source.wim  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>David Jones</name><email>BladeFireLight@outlook.com</email></author><category term="VHDX" /><category term="WindowsUpdate" /><category term="WindowsUpdateTools" /><category term="Module" /><summary type="html">One of the time consuming steps to deploying new VMs is the time spend managing Images and and applying patches. I’m not big on Golden images. I tend to use a fully patched VHDX or VMDK and let DSC handle the configuration and software. This is not the fastest, and at scale you need to create more then one image based on what saves the most time. (IIS, SQL, Exchange, etc…).</summary></entry><entry><title type="html">Windows Image Tools \| Creating an Updated Image Part 2</title><link href="https://blog.bladefirelight.com/windowsimagetools/Creating-an-Updateed-Image-Part2-WMF5/" rel="alternate" type="text/html" title="Windows Image Tools \| Creating an Updated Image Part 2" /><published>2016-09-01T16:48:59-05:00</published><updated>2016-09-01T16:48:59-05:00</updated><id>https://blog.bladefirelight.com/windowsimagetools/Creating-an-Updateed-Image-Part2-WMF5</id><content type="html" xml:base="https://blog.bladefirelight.com/windowsimagetools/Creating-an-Updateed-Image-Part2-WMF5/">&lt;h2 id=&quot;plan-for-today&quot;&gt;Plan for today&lt;/h2&gt;

&lt;p&gt;Windows Management Framework contains PowerShell. You should always run the latest supported in your environment, and it’s a good idea to get your hands on the preview and give it test run. I want my 2012r2 servers to be running WMF 5.0 the current stable realease.&lt;/p&gt;

&lt;p&gt;Now I could install 5.1 preview, but as it has to be uninstalled when the final get’s released, so I’m going to pass for now.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;If you folowing along you will need the WindowsImageTools update folder and two VHDX created in the last blog&lt;/p&gt;

&lt;h2 id=&quot;updating-wmf&quot;&gt;Updating WMF&lt;/h2&gt;

&lt;p&gt;Using Update-WindowsImageWMF we will download WMF 5.0 and .net 4.6.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;PS &lt;/span&gt;G:\&amp;gt; Update-WindowsImageWMF -Path G:\Blog_Example\ -ImageName Srv2012r2_Core -Verbose
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;First it’s going to create a child vhdx so we can revert if things go south&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VERBOSE: Performing the operation &lt;span class=&quot;s2&quot;&gt;&quot;Update WMF in Windows Image Tools Update Image&quot;&lt;/span&gt; on target
&lt;span class=&quot;s2&quot;&gt;&quot;G:\Blog_Example\\BaseImage\Srv2012r2_Core_Base.vhdx&quot;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : Creating G:\Blog_Example\\BaseImage\Srv2012r2_Core_Update.vhdx &lt;span class=&quot;k&quot;&gt;from
&lt;/span&gt;G:\Blog_Example\\BaseImage\Srv2012r2_Core_Base.vhdx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then it’s going to download the installer packages&lt;/p&gt;

&lt;div class=&quot;pre-wrap highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VERBOSE: [Update-WindowsImageWMF] : Checking for the latest WMF in G:\Blog_Example\\Resource\WMF\5
VERBOSE: GET https://www.microsoft.com/en-us/download/details.aspx?id=50395 with 0-byte payload
VERBOSE: received 107311-byte response of content type text/html
VERBOSE: GET http://www.microsoft.com/en-us/download/confirmation.aspx?id=50395 with 0-byte payload
VERBOSE: received -1-byte response of content type text/html
WARNING: [Update-WindowsImageWMF] : Checking for the latest WMF : W2K12-KB3134759-x64.msu Missing, Downloading
VERBOSE: GET https://download.microsoft.com/download/2/C/6/2C6E1B4A-EBE5-48A6-B225-2D2058A9CEFB/W2K12-KB3134759-x64.msu
 with 0-byte payload
VERBOSE: received 21540661-byte response of content type application/octet-stream
VERBOSE: [Update-WindowsImageWMF] : Checking for the latest WMF :
G:\Blog_Example\\Resource\WMF\5\W2K12-KB3134759-x64.msu : Found
WARNING: [Update-WindowsImageWMF] : Checking for the latest WMF : Win7AndW2K8R2-KB3134760-x64.msu Missing, Downloading
VERBOSE: GET
https://download.microsoft.com/download/2/C/6/2C6E1B4A-EBE5-48A6-B225-2D2058A9CEFB/Win7AndW2K8R2-KB3134760-x64.msu with
 0-byte payload
VERBOSE: received 21779572-byte response of content type application/octet-stream
VERBOSE: [Update-WindowsImageWMF] : Checking for the latest WMF :
G:\Blog_Example\\Resource\WMF\5\Win7AndW2K8R2-KB3134760-x64.msu : Found
WARNING: [Update-WindowsImageWMF] : Checking for the latest WMF : Win7-KB3134760-x86.msu Missing, Downloading
VERBOSE: GET https://download.microsoft.com/download/2/C/6/2C6E1B4A-EBE5-48A6-B225-2D2058A9CEFB/Win7-KB3134760-x86.msu
with 0-byte payload
VERBOSE: received 16961221-byte response of content type application/octet-stream
VERBOSE: [Update-WindowsImageWMF] : Checking for the latest WMF :
G:\Blog_Example\\Resource\WMF\5\Win7-KB3134760-x86.msu : Found
WARNING: [Update-WindowsImageWMF] : Checking for the latest WMF : Win8.1AndW2K12R2-KB3134758-x64.msu Missing,
Downloading
VERBOSE: GET
https://download.microsoft.com/download/2/C/6/2C6E1B4A-EBE5-48A6-B225-2D2058A9CEFB/Win8.1AndW2K12R2-KB3134758-x64.msu
with 0-byte payload
VERBOSE: received 19764832-byte response of content type application/octet-stream
VERBOSE: [Update-WindowsImageWMF] : Checking for the latest WMF :
G:\Blog_Example\\Resource\WMF\5\Win8.1AndW2K12R2-KB3134758-x64.msu : Found
WARNING: [Update-WindowsImageWMF] : Checking for the latest WMF : Win8.1-KB3134758-x86.msu Missing, Downloading
VERBOSE: GET
https://download.microsoft.com/download/2/C/6/2C6E1B4A-EBE5-48A6-B225-2D2058A9CEFB/Win8.1-KB3134758-x86.msu with 0-byte
 payload
VERBOSE: received 15059790-byte response of content type application/octet-stream
VERBOSE: [Update-WindowsImageWMF] : Checking for the latest WMF :
G:\Blog_Example\\Resource\WMF\5\Win8.1-KB3134758-x86.msu : Found
VERBOSE: [Update-WindowsImageWMF] : Checking for .NET 4.6.1 installer
WARNING: [Update-WindowsImageWMF] : Checking for .NET 4.6 installer : Missing : Downloading
VERBOSE: GET
https://download.microsoft.com/download/E/4/1/E4173890-A24A-4936-9FC9-AF930FE3FA40/NDP461-KB3102436-x86-x64-AllOS-ENU.e
xe with 0-byte payload
VERBOSE: received 67681000-byte response of content type application/octet-stream
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now it will copy the .NET installer and an AtStartup.ps1 to run the install.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : .NET : Adding installer to G:\Blog_Example\\BaseImage\Srv2012r2_Core_Update.vhdx
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : .NET : updateting AtStartup script
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It is going to create a VM with a random name and wait for it to stop. 
While it’s running the AtStartup script will install .net, reboot and check the version of .net
If it find’s what it’s expecting it creates a file that Update-WindowsImageWMF will look for to decide if it can continue.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : .NET : Creating temp vm and waiting
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;createRunAndWaitVM] : Creating VM s4gzlpa4 at 09/22/2016 16:54:47
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;createRunAndWaitVM] : VM s4gzlpa4 Stoped
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;createRunAndWaitVM] : VM s4gzlpa4 Deleted at 09/22/2016 17:12:52
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You cant use PowerShell to WMF because that updates PowerShell. So It will apply the MSU to the VHDX.
Now because Update-WindowsImageWMF does not know what OS is inside the vhdx. It will apply them all. Unfortunetly DISM (that does the work) reports succses when the MSU does not apply to that version of the OS. So it looks like all of the are installing but only the one that should actualy does.&lt;/p&gt;

&lt;div class=&quot;language-powershell pre-wrap highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : WMF : Applying WMF to G:\Blog_Example\\BaseImage\Srv2012r2_Core_Update.vhdx and
Updating AtStartup script
VERBOSE: checking &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;G:\Blog_Example\Resource\WMF\5\W2K12-KB3134759-x64.msu applies to
G:\Blog_Example\\BaseImage\Srv2012r2_Core_Update.vhdx
VERBOSE: Target Image Version 6.3.9600.17031
VERBOSE: Successfully added package G:\Blog_Example\Resource\WMF\5\W2K12-KB3134759-x64.msu
VERBOSE: checking &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;G:\Blog_Example\Resource\WMF\5\Win7-KB3134760-x86.msu applies to
G:\Blog_Example\\BaseImage\Srv2012r2_Core_Update.vhdx
VERBOSE: Target Image Version 6.3.9600.17031
VERBOSE: Successfully added package G:\Blog_Example\Resource\WMF\5\Win7-KB3134760-x86.msu
VERBOSE: checking &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;G:\Blog_Example\Resource\WMF\5\Win7AndW2K8R2-KB3134760-x64.msu applies to
G:\Blog_Example\\BaseImage\Srv2012r2_Core_Update.vhdx
VERBOSE: Target Image Version 6.3.9600.17031
VERBOSE: Successfully added package G:\Blog_Example\Resource\WMF\5\Win7AndW2K8R2-KB3134760-x64.msu
VERBOSE: checking &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;G:\Blog_Example\Resource\WMF\5\Win8.1-KB3134758-x86.msu applies to
G:\Blog_Example\\BaseImage\Srv2012r2_Core_Update.vhdx
VERBOSE: Target Image Version 6.3.9600.17031
VERBOSE: Successfully added package G:\Blog_Example\Resource\WMF\5\Win8.1-KB3134758-x86.msu
VERBOSE: checking &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;G:\Blog_Example\Resource\WMF\5\Win8.1AndW2K12R2-KB3134758-x64.msu applies to
G:\Blog_Example\\BaseImage\Srv2012r2_Core_Update.vhdx
VERBOSE: Target Image Version 6.3.9600.17031
VERBOSE: Successfully added package G:\Blog_Example\Resource\WMF\5\Win8.1AndW2K12R2-KB3134758-x64.msu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To finalize the install Update-WindowsImageWMF needs to create a vm and let it finish installing then run a AtStartup script to check the version of PowerShell to validate the install worked. and if so write a flag file.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : WMF : creating temp VM to finalize &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;on
G:\Blog_Example\\BaseImage\Srv2012r2_Core_Update.vhdx
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;createRunAndWaitVM] : Creating VM yary1ogs at 09/22/2016 17:15:55
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;createRunAndWaitVM] : VM yary1ogs Stoped
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;createRunAndWaitVM] : VM yary1ogs Deleted at 09/22/2016 17:18:17
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If the flag file is detected then the child vhdx is merged back into the base. if not the child file id discarded and an error thrown&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : WMF : Checking &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;changes made
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : WMF : Changes found : Merging G:\Blog_Example\\BaseImage\Srv2012r2_Core_Update.vhdx
 into G:\Blog_Example\\BaseImage\Srv2012r2_Core_Base.vhdx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I’m going to run the same command again on the other vhdx&lt;/p&gt;

&lt;div class=&quot;language-powershell pre-wrap highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Update-WindowsImageWMF -Path G:\Blog_Example\ -ImageName Srv2012r2_Source -Verbose
VERBOSE: Performing the operation &lt;span class=&quot;s2&quot;&gt;&quot;Update WMF in Windows Image Tools Update Image&quot;&lt;/span&gt; on target &lt;span class=&quot;s2&quot;&gt;&quot;G:\Blog_Example\\BaseImage\Srv2012r2_Source_Base.vhdx&quot;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : Creating G:\Blog_Example\\BaseImage\Srv2012r2_Source_Update.vhdx &lt;span class=&quot;k&quot;&gt;from &lt;/span&gt;G:\Blog_Example\\BaseImage\Srv2012r2_Source_Base.vhdx
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : Checking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the latest WMF &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;G:\Blog_Example\\Resource\WMF\5
VERBOSE: GET https://www.microsoft.com/en-us/download/details.aspx?id&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;50395 with 0-byte payload
VERBOSE: received 107378-byte response of content &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;text/html
VERBOSE: GET http://www.microsoft.com/en-us/download/confirmation.aspx?id&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;50395 with 0-byte payload
VERBOSE: received -1-byte response of content &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;text/html
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : Checking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the latest WMF : G:\Blog_Example\\Resource\WMF\5\W2K12-KB3134759-x64.msu : Found
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : Checking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the latest WMF : G:\Blog_Example\\Resource\WMF\5\W2K12-KB3134759-x64.msu : Found
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : Checking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the latest WMF : G:\Blog_Example\\Resource\WMF\5\Win7AndW2K8R2-KB3134760-x64.msu : Found
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : Checking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the latest WMF : G:\Blog_Example\\Resource\WMF\5\Win7AndW2K8R2-KB3134760-x64.msu : Found
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : Checking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the latest WMF : G:\Blog_Example\\Resource\WMF\5\Win7-KB3134760-x86.msu : Found
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : Checking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the latest WMF : G:\Blog_Example\\Resource\WMF\5\Win7-KB3134760-x86.msu : Found
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : Checking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the latest WMF : G:\Blog_Example\\Resource\WMF\5\Win8.1AndW2K12R2-KB3134758-x64.msu : Found
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : Checking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the latest WMF : G:\Blog_Example\\Resource\WMF\5\Win8.1AndW2K12R2-KB3134758-x64.msu : Found
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : Checking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the latest WMF : G:\Blog_Example\\Resource\WMF\5\Win8.1-KB3134758-x86.msu : Found
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : Checking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the latest WMF : G:\Blog_Example\\Resource\WMF\5\Win8.1-KB3134758-x86.msu : Found
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : Checking &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; .NET 4.6.1 installer
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : .NET : Adding installer to G:\Blog_Example\\BaseImage\Srv2012r2_Source_Update.vhdx
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : .NET : updateting AtStartup script
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : .NET : Creating temp vm and waiting
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;createRunAndWaitVM] : Creating VM dkdjxvqm at 09/23/2016 08:56:23
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;createRunAndWaitVM] : VM dkdjxvqm Stoped
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;createRunAndWaitVM] : VM dkdjxvqm Deleted at 09/23/2016 09:12:39
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : WMF : Applying WMF to G:\Blog_Example\\BaseImage\Srv2012r2_Source_Update.vhdx and Updating AtStartup script
VERBOSE: checking &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;G:\Blog_Example\Resource\WMF\5\W2K12-KB3134759-x64.msu applies to G:\Blog_Example\\BaseImage\Srv2012r2_Source_Update.vhdx
VERBOSE: Target Image Version 6.3.9600.17031
VERBOSE: Successfully added package G:\Blog_Example\Resource\WMF\5\W2K12-KB3134759-x64.msu
VERBOSE: checking &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;G:\Blog_Example\Resource\WMF\5\Win7-KB3134760-x86.msu applies to G:\Blog_Example\\BaseImage\Srv2012r2_Source_Update.vhdx
VERBOSE: Target Image Version 6.3.9600.17031
VERBOSE: Successfully added package G:\Blog_Example\Resource\WMF\5\Win7-KB3134760-x86.msu
VERBOSE: checking &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;G:\Blog_Example\Resource\WMF\5\Win7AndW2K8R2-KB3134760-x64.msu applies to G:\Blog_Example\\BaseImage\Srv2012r2_Source_Update.vhdx
VERBOSE: Target Image Version 6.3.9600.17031
VERBOSE: Successfully added package G:\Blog_Example\Resource\WMF\5\Win7AndW2K8R2-KB3134760-x64.msu
VERBOSE: checking &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;G:\Blog_Example\Resource\WMF\5\Win8.1-KB3134758-x86.msu applies to G:\Blog_Example\\BaseImage\Srv2012r2_Source_Update.vhdx
VERBOSE: Target Image Version 6.3.9600.17031
VERBOSE: Successfully added package G:\Blog_Example\Resource\WMF\5\Win8.1-KB3134758-x86.msu
VERBOSE: checking &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;G:\Blog_Example\Resource\WMF\5\Win8.1AndW2K12R2-KB3134758-x64.msu applies to G:\Blog_Example\\BaseImage\Srv2012r2_Source_Update.vhdx
VERBOSE: Target Image Version 6.3.9600.17031
VERBOSE: Successfully added package G:\Blog_Example\Resource\WMF\5\Win8.1AndW2K12R2-KB3134758-x64.msu
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : WMF : creating temp VM to finalize &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;on G:\Blog_Example\\BaseImage\Srv2012r2_Source_Update.vhdx
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;createRunAndWaitVM] : Creating VM e5h2cc34 at 09/23/2016 09:15:50
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;createRunAndWaitVM] : VM e5h2cc34 Stoped
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;createRunAndWaitVM] : VM e5h2cc34 Deleted at 09/23/2016 09:18:25
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : WMF : Checking &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;changes made
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Update-WindowsImageWMF] : WMF : Changes found : Merging G:\Blog_Example\\BaseImage\Srv2012r2_Source_Update.vhdx into G:\Blog_Example\\BaseImage\Srv2012r2_Source_Base.vhdx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now I’m going to quickly check to make sure this worked. I dont want to make any changes to the drive as it is so I will create a child vhdx and boot it.&lt;/p&gt;

&lt;div class=&quot;language-powershell pre-wrap highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;New-VHD -Path G:\Blog_Example\BaseImage\Srv2012r2_Core_temp.vhdx -ParentPath G:\Blog_Example\BaseImage\Srv2012r2_Core_base.vhdx
Invoke-CreateVmRunAndWait -VhdPath G:\Blog_Example\\BaseImage\Srv2012r2_Core_temp.vhdx 
&lt;span class=&quot;nb&quot;&gt;Remove-Item &lt;/span&gt;G:\Blog_Example\\BaseImage\Srv2012r2_Core_temp.vhdx 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;checking the psversion table we see what is expected.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.bladefirelight.com\assets\images\PS5Version.JPG&quot; alt=&quot;PowerShell Version Table&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;&lt;strong&gt;Dealing with 2008/Win7&lt;/strong&gt;  WMF 5 on 2008 and Win7 need a few patches after WMF 4 is installed. So You want to run windows update before installing WMF 5&lt;/p&gt;

&lt;p&gt;Next up. Windows update and output of WIM/VHDX&lt;/p&gt;</content><author><name>David Jones</name><email>BladeFireLight@outlook.com</email></author><category term="VHDX" /><category term="WindowsUpdate" /><category term="WindowsUpdateTools" /><category term="Module" /><summary type="html">One of the time consuming steps to deploying new VMs is the time spend managing Images and and applying patches. I’m not big on Golden images. I tend to use a fully patched VHDX or VMDK and let DSC handle the configuration and software. This is not the fastest, and at scale you need to create more then one image based on what saves the most time. (IIS, SQL, Exchange, etc…).</summary></entry><entry><title type="html">Windows Image Tools \| Creating an Updated Image Part 1</title><link href="https://blog.bladefirelight.com/windowsimagetools/Creating-an-Updateed-Image-Part1-Base-VHDX/" rel="alternate" type="text/html" title="Windows Image Tools \| Creating an Updated Image Part 1" /><published>2016-09-01T16:48:59-05:00</published><updated>2016-09-01T16:48:59-05:00</updated><id>https://blog.bladefirelight.com/windowsimagetools/Creating-an-Updateed-Image-Part1-Base-VHDX</id><content type="html" xml:base="https://blog.bladefirelight.com/windowsimagetools/Creating-an-Updateed-Image-Part1-Base-VHDX/">&lt;h2 id=&quot;staring-over&quot;&gt;Staring over&lt;/h2&gt;

&lt;p&gt;In the last post I demonstrated creating a fresh VHDX, with unattent.xml and using that to install 7zip.&lt;/p&gt;

&lt;p&gt;Now i’m going to throw all that out, and starting over with a base image to install WMF5 and run windows updates.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;For this we need the folder scructure used the WindowsImageTools to store the files. Luckily we have New-WindowsImageToolsExample that will create the folders and files we need.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;New-WindowsImageToolsExample -Path g:\Blog_Example
WARNING: Unable to &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;Windows Image Tools Update Cofniguration &lt;span class=&quot;k&quot;&gt;from &lt;/span&gt;g:\Blog_Example\Config.xml, creating a new file


    Directory: G:\


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-----         9/6/2016   4:09 PM                Blog_Example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s take a look at what we get&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dir G:\Blog_Example\


    Directory: G:\Blog_Example


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-----         9/6/2016   4:09 PM                BaseImage
d-----         9/6/2016   4:09 PM                ISO
d-----         9/6/2016   4:09 PM                Resource
d-----         9/6/2016   4:09 PM                UpdatedImageShare
-a----         9/6/2016   4:09 PM           3993 AdvancedUpdateExample.ps1
-a----         9/6/2016   4:09 PM           4775 BasicConvertExample.ps1
-a----         9/6/2016   4:09 PM           7456 BasicUpdateExample.ps1
-a----         9/6/2016   4:09 PM           1788 Config.xml
-a----         9/6/2016   4:09 PM           4814 DownloadEvalIso.ps1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I will not be delving into the example ps1 files. I’m going to walkthrough a similar example to the advanced one.&lt;/p&gt;

&lt;p&gt;We will start by looking at the Config.xml&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Objs&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.1.0.1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/powershell/2004/04&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;Obj&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;RefId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;TN&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;RefId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;T&amp;gt;&lt;/span&gt;System.Collections.Hashtable&lt;span class=&quot;nt&quot;&gt;&amp;lt;/T&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;T&amp;gt;&lt;/span&gt;System.Object&lt;span class=&quot;nt&quot;&gt;&amp;lt;/T&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/TN&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;DCT&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;En&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;S&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;N=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Key&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Gateway&lt;span class=&quot;nt&quot;&gt;&amp;lt;/S&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;S&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;N=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Value&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;192.168.0.1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/S&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/En&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;En&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;S&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;N=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Key&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;vLan&lt;span class=&quot;nt&quot;&gt;&amp;lt;/S&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;I32&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;N=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Value&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/I32&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/En&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;En&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;S&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;N=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Key&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;IpAddress&lt;span class=&quot;nt&quot;&gt;&amp;lt;/S&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;S&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;N=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Value&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;192.168.0.100&lt;span class=&quot;nt&quot;&gt;&amp;lt;/S&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/En&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;En&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;S&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;N=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Key&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;VmSwitch&lt;span class=&quot;nt&quot;&gt;&amp;lt;/S&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;S&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;N=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Value&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;vmswitch&lt;span class=&quot;nt&quot;&gt;&amp;lt;/S&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/En&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;En&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;S&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;N=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Key&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;IpType&lt;span class=&quot;nt&quot;&gt;&amp;lt;/S&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;S&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;N=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Value&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;DHCP&lt;span class=&quot;nt&quot;&gt;&amp;lt;/S&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/En&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;En&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;S&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;N=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Key&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;SubnetMask&lt;span class=&quot;nt&quot;&gt;&amp;lt;/S&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;I32&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;N=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Value&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;24&lt;span class=&quot;nt&quot;&gt;&amp;lt;/I32&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/En&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;En&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;S&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;N=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Key&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;DnsServer&lt;span class=&quot;nt&quot;&gt;&amp;lt;/S&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;S&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;N=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Value&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;192.168.0.1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/S&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/En&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/DCT&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Obj&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Objs&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It’s a basic clixml file created with Export-Clixml containing the configuration used by WindowsImageTools to manage network settings for the vm’s it creates. Now I’m not about to edit that file manual, and while I could use Import-Clixml/Export-Clixml to work with it. It simpler to use the functions that come with WindowsImageTools Get-UpdateConfig/Set-UpdateConfig&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Get-UpdateConfig -Path G:\Blog_Example\

Name                           Value
----                           -----
IpType                         DHCP
vLan                           0
DnsServer                      192.168.0.1
Gateway                        192.168.0.1
VmSwitch                       vmswitch
SubnetMask                     24
IpAddress                      192.168.0.100
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see the default uses DHCP for the vm’s IP assignment, does not use vLan tageing and attached to the virtual switch called vmswitch. To use it in my enviroment I need to make one small change&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;Set&lt;/span&gt;-UpdateConfig -Path G:\Blog_Example\ -VmSwitch Bridge | Get-UpdateConfig

Name                           Value
----                           -----
IpType                         DHCP
vLan                           0
DnsServer                      192.168.0.1
Gateway                        192.168.0.1
VmSwitch                       Bridge
SubnetMask                     24
IpAddress                      192.168.0.100
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we are ready to add a base images.&lt;/p&gt;

&lt;h2 id=&quot;a-la-carte-or-all-you-can-eat&quot;&gt;A la carte or All you can eat&lt;/h2&gt;

&lt;p&gt;I’m going to create two images. One bear-bones 2012 R2 Core and one 2012 R2 GUI with .net 3.5. The reason for this is I want one really small WIM/VHDX for a starting port, and one WIM that I can use for a source to add Windows Features.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;&lt;strong&gt;Why the Soruce WIM?&lt;/strong&gt;  Windows Core comes with very little of the Windows Features installed, and when you add them Install-WindowsFeature will look to Windows Update for the missing bits. However if you don’t have internet access then you need a source WIM. In a secure environment InfoSec usually frowns on web surfing from servers and expect you to use WSUS for updates. Unfortunately Install-WindowsFeature will not use WSUS.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-PowerShell&quot;&gt;Add-UpdateImage -Path 'G:\Blog_Example\' -FriendlyName 'Srv2012r2_Source' -DiskLayout UEFI -SourcePath 'G:\iso\Srv2012r2Eval.ISO'  -AdminCredential (Get-Credential) -AddPayloadForRemovedFeature -Index 4
Add-UpdateImage -Path 'G:\Blog_Example\' -FriendlyName 'Srv2012r2_Core' -DiskLayout UEFI -SourcePath 'G:\iso\Srv2012r2Eval.ISO'  -AdminCredential (Get-Credential) -Index 3
dir 'G:\Blog_Example\BaseImage\'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This gives us the two files.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    Directory: G:\Blog_Example\BaseImage


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----         9/6/2016   8:55 PM     4874829824 Srv2012r2_Core_base.vhdx
-a----         9/6/2016   8:28 PM     8250195968 Srv2012r2_Source_base.vhdx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next up I’m going to update both to WMF5.&lt;/p&gt;</content><author><name>David Jones</name><email>BladeFireLight@outlook.com</email></author><category term="VHDX" /><category term="WindowsUpdate" /><category term="WindowsUpdateTools" /><category term="Module" /><summary type="html">One of the time consuming steps to deploying new VMs is the time spend managing Images and and applying patches. I’m not big on Golden images. I tend to use a fully patched VHDX or VMDK and let DSC handle the configuration and software. This is not the fastest, and at scale you need to create more then one image based on what saves the most time. (IIS, SQL, Exchange, etc…).</summary></entry><entry><title type="html">Re-factoring the Blog</title><link href="https://blog.bladefirelight.com/Blog-Refactoring/" rel="alternate" type="text/html" title="Re-factoring the Blog" /><published>2016-09-01T00:00:00-05:00</published><updated>2016-09-01T00:00:00-05:00</updated><id>https://blog.bladefirelight.com/Blog-Refactoring</id><content type="html" xml:base="https://blog.bladefirelight.com/Blog-Refactoring/">&lt;h2 id=&quot;sometimes-rebooting-fixes-everything&quot;&gt;Sometimes rebooting fixes everything&lt;/h2&gt;

&lt;p&gt;After spending month after month on WidnowsImageTools and little else in my free time. My blog has been looking like abandonware. I had always planed to comeback, but there was always this nagging issue. WordPress. is a hosted service and cost money if you want more then the vanilla. And I had no interest in hosting WordPress elseware. It also was missing a plug-in that allowed you to to reference GitHub files directly. Copying code from a GitHub project into Gist seems like a major waste of time.&lt;/p&gt;

&lt;h2 id=&quot;enter-jekyll&quot;&gt;Enter Jekyll&lt;/h2&gt;

&lt;p&gt;A few months ago I listened to a podcast where they briefly mentioned github pages. This perked my interest. Partially because if was free, and partly because if was GitHub. (I also like the idea of bloging like a hacker).&lt;/p&gt;

&lt;p&gt;I figured if it was hosted on GitHub, surely they would have a easy way to reference a GitHub Repo. No such luck. The default plugins were somewhat limited. If I wanted unsupported plugins I had to compile the site locally. So I looked at all the plugins for Jekyll in Ruby Gems, I came across one that worked. However it only wanted to work in Jekyll version 1. I looked at the code on it’s GitHub repo and it looked to be an arbitrary requirement. So I set out the setup Jekyll using Bash on Windows 10.&lt;/p&gt;

&lt;p&gt;I plan to write a full blog on the experience. There were many bumps and gatcha’s getting here, but I now can reference sections of GitHub Repos files in my posts, so it was worth it.&lt;/p&gt;</content><author><name>David Jones</name><email>BladeFireLight@outlook.com</email></author><category term="Blog" /><category term="Jekyll" /><summary type="html">Sometimes rebooting fixes everything After spending month after month on WidnowsImageTools and little else in my free time. My blog has been looking like abandonware. I had always planed to comeback, but there was always this nagging issue. WordPress. is a hosted service and cost money if you want more then the vanilla. And I had no interest in hosting WordPress elseware. It also was missing a plug-in that allowed you to to reference GitHub files directly. Copying code from a GitHub project into Gist seems like a major waste of time. Enter Jekyll A few months ago I listened to a podcast where they briefly mentioned github pages. This perked my interest. Partially because if was free, and partly because if was GitHub. (I also like the idea of bloging like a hacker). I figured if it was hosted on GitHub, surely they would have a easy way to reference a GitHub Repo. No such luck. The default plugins were somewhat limited. If I wanted unsupported plugins I had to compile the site locally. So I looked at all the plugins for Jekyll in Ruby Gems, I came across one that worked. However it only wanted to work in Jekyll version 1. I looked at the code on it’s GitHub repo and it looked to be an arbitrary requirement. So I set out the setup Jekyll using Bash on Windows 10. I plan to write a full blog on the experience. There were many bumps and gatcha’s getting here, but I now can reference sections of GitHub Repos files in my posts, so it was worth it.</summary></entry><entry><title type="html">Windows Image Tools \| Modify VHDX</title><link href="https://blog.bladefirelight.com/windowsimagetools/Modifying-Fresh-VHDX/" rel="alternate" type="text/html" title="Windows Image Tools \| Modify VHDX" /><published>2016-08-30T16:48:59-05:00</published><updated>2016-08-30T16:48:59-05:00</updated><id>https://blog.bladefirelight.com/windowsimagetools/Modifying-Fresh-VHDX</id><content type="html" xml:base="https://blog.bladefirelight.com/windowsimagetools/Modifying-Fresh-VHDX/">&lt;h2 id=&quot;continuing-onward&quot;&gt;Continuing onward&lt;/h2&gt;

&lt;p&gt;In the last post I talked about Unattend.xml and using WindowsImageTools to create a new VHDX with an Unattend.xml and FirstBoot.ps1 for it to run.&lt;/p&gt;

&lt;p&gt;using that as a starting point I’m going to replace the do-nothing FirstBoot.ps1 add have it so something more interesting.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;You will need the VHDX created at the end of my post on New-UnattendXml and obviously a copy on WindowsImageTools from the PowerShell gallery.&lt;/p&gt;

&lt;p&gt;We are going to have our VHDX install &lt;a href=&quot;http://www.7-zip.org/download.html&quot;&gt;7Zip&lt;/a&gt; on first boot so you will need to download a the MSI if your following along.&lt;/p&gt;

&lt;h2 id=&quot;creating-a-new-improved-firstbootps1&quot;&gt;Creating a new improved FirstBoot.ps1&lt;/h2&gt;

&lt;p&gt;I downloaded my MSI into G:\filesToInject\PsTemp and now i’m going to replace firstboot.ps1 so it will silently install it and write a log and shutdown&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-PowerShell&quot;&gt;$BetterFirstBootContent = {
   start-process C:\PsTemp\7z1602-x64.msi -ArgumentList '/q','INSTALLDIR=&quot;C:\Program Files\7-Zip&quot;' -wait
}
 New-Item -Path &quot;G:\filesToInject\PsTemp&quot; -Name FirstBoot.ps1 -ItemType 'file' -Value $BetterFirstBootContent -Force
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;placing-the-files-in-the-vhdx&quot;&gt;Placing the files in the VHDX&lt;/h3&gt;

&lt;p&gt;So now we need to get the two fils into our existing VHD. Now I could just run Convert-Wim2VHD again with the same commands and I would get the desired effect, but I dont want to wait for the that process. I also could just mount the VHDX and drag and drop the files into the VHDX, but that would not let me show off another function in WindowsImageTools&lt;/p&gt;

&lt;h4 id=&quot;mount-vhdandrunblock&quot;&gt;Mount-VhdAndRunBlock&lt;/h4&gt;

&lt;p&gt;Mount-VhdAndRunBlock is one of my favorite tools. It will mount a VHD and run a script block allowing me to manipulate the files inside. This can be used for copying in files, Editing the registry, checking if a file exists and so on.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-PowerShell&quot;&gt;$ScriptBlock = {
  copy G:\filesToInject\PsTemp\*.* &quot;$($driveletter):\PsTemp\&quot; -Force
} 
Mount-VhdAndRunBlock -VHD 'G:\vhd\2012r2_eval_Core.vhdx' -block $ScriptBlock
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we have the better first boot script we need to create a VM to attach the vhdx to. for that I’m going to use Invoke-CreateVmRunAndWait.&lt;/p&gt;

&lt;h3 id=&quot;before-we-create-a-vm&quot;&gt;Before we create a VM&lt;/h3&gt;

&lt;p&gt;Lets look at what we need besides the vhdx to use Invoke-CreateVmRunAndWait&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-PowerShell&quot;&gt;help Invoke-CreateVmRunAndWait

NAME
    Invoke-CreateVmRunAndWait

SYNOPSIS
    Create a temp vm with a random name and wait for it to stop


SYNTAX
    Invoke-CreateVmRunAndWait [-VhdPath] &amp;lt;String&amp;gt; [-VmGeneration] &amp;lt;Int32&amp;gt; [-VmSwitch] &amp;lt;String&amp;gt; [[-vLan] &amp;lt;Int32&amp;gt;]
    [[-ProcessorCount] &amp;lt;Int32&amp;gt;] [[-MemoryStartupBytess] &amp;lt;Int64&amp;gt;] [&amp;lt;CommonParameters&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So according to the syntax VhdPath, VmGeneration and VmSwitch are required parameters.&lt;/p&gt;

&lt;h4 id=&quot;deciding-on-a-vm-generation&quot;&gt;Deciding on a VM Generation&lt;/h4&gt;

&lt;p&gt;While I know what type of VHDX i created, when creating automation script we may not always know if I need a Gen1 or Gen2 VM. So I’m going use Get-VhdPartitionStyle.&lt;/p&gt;

&lt;p&gt;Get-VhdPartitionStyle will return a string of either MBR for Master Boot Record or GPT for GUID Partition Table. Generation 1 VM’s are based on BIOS and windows only works with MBR partitions for BIOS based computers. Generation 2 VM’s are based on uEFI architecture and Windows uses GPT partitions by default with uEFI.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$vmGeneration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 2 &lt;span class=&quot;c1&quot;&gt;#default to gen2 &lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$PartitionStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Get-VhdPartitionStyle -vhd &lt;span class=&quot;s1&quot;&gt;'G:\vhd\2012r2_eval_Core.vhdx'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PartitionStyle&lt;/span&gt; -eq &lt;span class=&quot;s1&quot;&gt;'GPT'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$vmGeneration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 2
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;getting-the-switch&quot;&gt;Getting the switch&lt;/h4&gt;

&lt;p&gt;We are not actually going to use the network in this example so I’m just going to grab the first VmSwitch&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$VmSwitch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Get-VMSwitch&lt;span class=&quot;o&quot;&gt;)[&lt;/span&gt;0].Name &lt;span class=&quot;c1&quot;&gt;#First switch&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;creating-the-vm&quot;&gt;Creating the VM&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-PowerShell&quot;&gt;Invoke-CreateVmRunAndWait -VhdPath 'G:\vhd\2012r2_eval_Core.vhdx' -VmGeneration $vmGeneration -VmSwitch $VmSwitch -verbose
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We now have a randomly named vm that will run our script and install z7ip. Because it running this during the specialize phase once it’s done it will reboot and end up at the “Press Ctrl+Alt+Del to login” I”m just going to use Hyper-V manager to shut it down.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-PowerShell&quot;&gt;VERBOSE: [Invoke-CreateVmRunAndWait] : Creating VM 1utbdwad at 08/30/2016 10:57:29
VERBOSE: [Invoke-CreateVmRunAndWait] : VM 1utbdwad stopped
VERBOSE: [Invoke-CreateVmRunAndWait] : VM 1utbdwad Deleted at 08/30/2016 11:08:47
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;checking-the-results&quot;&gt;Checking the results&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-PowerShell&quot;&gt;$ScriptBlock = {
  dir &quot;$($driveletter):\Program Files\&quot;
} 
Mount-VhdAndRunBlock -VHD 'G:\vhd\2012r2_eval_Core.vhdx' -block $ScriptBlock
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    Directory: K:\Program Files


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-----         9/4/2016   9:42 AM                7-Zip
d-----        8/22/2013  10:39 AM                Common Files
d-----        3/21/2014   1:09 PM                Internet Explorer
d-----        8/22/2013  10:39 AM                WindowsPowerShell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;So now we have a VM with an app installed, users created and automated the Out of Box Esperance. However a fresh install of Server 2012 R2 does not have WMF 5 and will have a ton of patches that need to be installed.&lt;/p&gt;

&lt;p&gt;I will tackle that next.&lt;/p&gt;</content><author><name>David Jones</name><email>BladeFireLight@outlook.com</email></author><category term="VHDX" /><category term="WindowsUpdate" /><category term="WindowsUpdateTools" /><category term="Module" /><summary type="html">One of the time consuming steps to deploying new VMs is the time spend managing Images and and applying patches. I’m not big on Golden images. I tend to use a fully patched VHDX or VMDK and let DSC handle the configuration and software. This is not the fastest, and at scale you need to create more then one image based on what saves the most time. (IIS, SQL, Exchange, etc…).</summary></entry><entry><title type="html">Windows Image Tools \| Unattend.xml</title><link href="https://blog.bladefirelight.com/windowsimagetools/Unattend/" rel="alternate" type="text/html" title="Windows Image Tools \| Unattend.xml" /><published>2016-08-22T16:48:59-05:00</published><updated>2016-08-22T16:48:59-05:00</updated><id>https://blog.bladefirelight.com/windowsimagetools/Unattend</id><content type="html" xml:base="https://blog.bladefirelight.com/windowsimagetools/Unattend/">&lt;h2 id=&quot;getting-started&quot;&gt;Getting started&lt;/h2&gt;

&lt;p&gt;The second item need to automate the creation of a VM is a way to bootstrap said automation of a fresh windows image. That requires an unattend.xml&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;prerequisites&lt;/h2&gt;

&lt;p&gt;Now to work with Unattent.xml you need a deep understanding of XML structure and namespace… Just kidding. I’m going to use New-UnattendXml part of WindowsImageTools&lt;/p&gt;

&lt;p&gt;You can install WindowsImageTools from the PowerShell Gallery with install-module WindowsImageTools&lt;/p&gt;

&lt;h2 id=&quot;creating-a-basic-unattentxml&quot;&gt;Creating a basic Unattent.xml&lt;/h2&gt;

&lt;p&gt;Lets start off with a basic Unattend. Minimum requirements for this is changing the administrator password&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;New-UnattendXml -AdminCredential &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Get-Credential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; |
&lt;span class=&quot;nb&quot;&gt;Get-Content&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cmdlet &lt;span class=&quot;nb&quot;&gt;Get-Credential &lt;/span&gt;at &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;pipeline position 1
Supply values &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the following parameters:
Credential
WARNING: C:\Users\BLADE_~1\AppData\Local\Temp\hqfyjyg2\unattend.xml only usable on a server SKU, &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;a client OS, use
either -EnableAdministrator or -UserAccount
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice the warning. Setting the Admin password on a server is all you need, as the build in Administrator account is allready enabled. On a client OS you have to either enable the administrator or add a second one or three.
It spits out this mass of XML&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;unattend&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;urn:schemas-microsoft-com:unattend&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;settings&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;specialize&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-Deployment&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;amd64&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-Deployment&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x86&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-Shell-Setup&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;amd64&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;ComputerName&amp;gt;&lt;/span&gt;*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ComputerName&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-Shell-Setup&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x86&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;ComputerName&amp;gt;&lt;/span&gt;*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ComputerName&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;settings&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;oobeSystem&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-International-Core&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;amd64&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;InputLocale&amp;gt;&lt;/span&gt;en-US&lt;span class=&quot;nt&quot;&gt;&amp;lt;/InputLocale&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;SystemLocale&amp;gt;&lt;/span&gt;en-US&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SystemLocale&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;UILanguage&amp;gt;&lt;/span&gt;en-US&lt;span class=&quot;nt&quot;&gt;&amp;lt;/UILanguage&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;UserLocale&amp;gt;&lt;/span&gt;en-US&lt;span class=&quot;nt&quot;&gt;&amp;lt;/UserLocale&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-International-Core&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x86&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;InputLocale&amp;gt;&lt;/span&gt;en-US&lt;span class=&quot;nt&quot;&gt;&amp;lt;/InputLocale&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;SystemLocale&amp;gt;&lt;/span&gt;en-US&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SystemLocale&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;UILanguage&amp;gt;&lt;/span&gt;en-US&lt;span class=&quot;nt&quot;&gt;&amp;lt;/UILanguage&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;UserLocale&amp;gt;&lt;/span&gt;en-US&lt;span class=&quot;nt&quot;&gt;&amp;lt;/UserLocale&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-Shell-Setup&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;amd64&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;OOBE&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;HideEULAPage&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HideEULAPage&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;HideWirelessSetupInOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HideWirelessSetupInOOBE&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;NetworkLocation&amp;gt;&lt;/span&gt;Work&lt;span class=&quot;nt&quot;&gt;&amp;lt;/NetworkLocation&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;ProtectYourPC&amp;gt;&lt;/span&gt;1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ProtectYourPC&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;SkipUserOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SkipUserOOBE&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;SkipMachineOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SkipMachineOOBE&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/OOBE&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;TimeZone&amp;gt;&lt;/span&gt;GMT Standard Time&lt;span class=&quot;nt&quot;&gt;&amp;lt;/TimeZone&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;UserAccounts&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;AdministratorPassword&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;Value&amp;gt;&lt;/span&gt;YQBkAHMAZgBBAGQAbQBpAG4AaQBzAHQAcgBhAHQAbwByAFAAYQBzAHMAdwBvAHIAZAA=&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Value&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;PlainText&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/PlainText&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/AdministratorPassword&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/UserAccounts&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;RegisteredOrganization&amp;gt;&lt;/span&gt;Generic Organization&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RegisteredOrganization&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;RegisteredOwner&amp;gt;&lt;/span&gt;Generic Owner&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RegisteredOwner&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-Shell-Setup&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x86&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;OOBE&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;HideEULAPage&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HideEULAPage&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;HideWirelessSetupInOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HideWirelessSetupInOOBE&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;NetworkLocation&amp;gt;&lt;/span&gt;Work&lt;span class=&quot;nt&quot;&gt;&amp;lt;/NetworkLocation&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;ProtectYourPC&amp;gt;&lt;/span&gt;1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ProtectYourPC&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;SkipUserOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SkipUserOOBE&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;SkipMachineOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SkipMachineOOBE&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/OOBE&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;TimeZone&amp;gt;&lt;/span&gt;GMT Standard Time&lt;span class=&quot;nt&quot;&gt;&amp;lt;/TimeZone&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;UserAccounts&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;AdministratorPassword&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;Value&amp;gt;&lt;/span&gt;YQBkAHMAZgBBAGQAbQBpAG4AaQBzAHQAcgBhAHQAbwByAFAAYQBzAHMAdwBvAHIAZAA=&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Value&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;PlainText&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/PlainText&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/AdministratorPassword&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/UserAccounts&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;RegisteredOrganization&amp;gt;&lt;/span&gt;Generic Organization&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RegisteredOrganization&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;RegisteredOwner&amp;gt;&lt;/span&gt;Generic Owner&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RegisteredOwner&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/unattend&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;anatomy-of-unattentxml&quot;&gt;Anatomy of Unattent.xml&lt;/h2&gt;

&lt;p&gt;Takeing a closer look at each section&lt;/p&gt;

&lt;h3 id=&quot;specialize--deployment&quot;&gt;Specialize : Deployment&lt;/h3&gt;

&lt;p&gt;Contrary to popular belief, the unattend.xml can have one file that can be use for both 32 and 64bit. All you have to do is repeat the section with a different architecture. With one caveat that I will get into later. In the basic Unattent the Deployment section is empty.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-Deployment&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;amd64&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-Deployment&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x86&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;specialize--shell-setup&quot;&gt;Specialize : Shell Setup&lt;/h3&gt;

&lt;p&gt;Basic settings lets windows pick a random computer name.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-Shell-Setup&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;amd64&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ComputerName&amp;gt;&lt;/span&gt;*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ComputerName&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-Shell-Setup&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x86&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ComputerName&amp;gt;&lt;/span&gt;*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ComputerName&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;oobesystem--international-core&quot;&gt;oobeSystem : International Core&lt;/h3&gt;

&lt;p&gt;The language and input are localized to en-US by default, This can be changed via parameters&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-International-Core&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;amd64&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;InputLocale&amp;gt;&lt;/span&gt;en-US&lt;span class=&quot;nt&quot;&gt;&amp;lt;/InputLocale&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;SystemLocale&amp;gt;&lt;/span&gt;en-US&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SystemLocale&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;UILanguage&amp;gt;&lt;/span&gt;en-US&lt;span class=&quot;nt&quot;&gt;&amp;lt;/UILanguage&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;UserLocale&amp;gt;&lt;/span&gt;en-US&lt;span class=&quot;nt&quot;&gt;&amp;lt;/UserLocale&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-International-Core&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x86&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;InputLocale&amp;gt;&lt;/span&gt;en-US&lt;span class=&quot;nt&quot;&gt;&amp;lt;/InputLocale&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;SystemLocale&amp;gt;&lt;/span&gt;en-US&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SystemLocale&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;UILanguage&amp;gt;&lt;/span&gt;en-US&lt;span class=&quot;nt&quot;&gt;&amp;lt;/UILanguage&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;UserLocale&amp;gt;&lt;/span&gt;en-US&lt;span class=&quot;nt&quot;&gt;&amp;lt;/UserLocale&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;oobesystem---shell-setup&quot;&gt;oobeSystem :  Shell-Setup&lt;/h3&gt;

&lt;p&gt;This section is a bit larger. It going to hide or skip everything it can to avoid any prompting. Afterall this is suposed to be automated.
We also set the Timezone to a default of GMT and set the admin password
Now the Admin Password may look encrypted, but it’s not that is 64bit encodeing. The best thing to do is set a password here for troubleshooting, then change it via LAPS or DSC once windows is up and running.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-Shell-Setup&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;amd64&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;OOBE&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;HideEULAPage&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HideEULAPage&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;HideWirelessSetupInOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HideWirelessSetupInOOBE&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;NetworkLocation&amp;gt;&lt;/span&gt;Work&lt;span class=&quot;nt&quot;&gt;&amp;lt;/NetworkLocation&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ProtectYourPC&amp;gt;&lt;/span&gt;1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ProtectYourPC&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;SkipUserOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SkipUserOOBE&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;SkipMachineOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SkipMachineOOBE&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/OOBE&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;TimeZone&amp;gt;&lt;/span&gt;GMT Standard Time&lt;span class=&quot;nt&quot;&gt;&amp;lt;/TimeZone&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;UserAccounts&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;AdministratorPassword&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;Value&amp;gt;&lt;/span&gt;YQBkAHMAZgBBAGQAbQBpAG4AaQBzAHQAcgBhAHQAbwByAFAAYQBzAHMAdwBvAHIAZAA=&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Value&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;PlainText&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/PlainText&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/AdministratorPassword&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/UserAccounts&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;RegisteredOrganization&amp;gt;&lt;/span&gt;Generic Organization&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RegisteredOrganization&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;RegisteredOwner&amp;gt;&lt;/span&gt;Generic Owner&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RegisteredOwner&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-Shell-Setup&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x86&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;OOBE&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;HideEULAPage&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HideEULAPage&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;HideWirelessSetupInOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HideWirelessSetupInOOBE&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;NetworkLocation&amp;gt;&lt;/span&gt;Work&lt;span class=&quot;nt&quot;&gt;&amp;lt;/NetworkLocation&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ProtectYourPC&amp;gt;&lt;/span&gt;1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ProtectYourPC&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;SkipUserOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SkipUserOOBE&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;SkipMachineOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SkipMachineOOBE&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/OOBE&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;TimeZone&amp;gt;&lt;/span&gt;GMT Standard Time&lt;span class=&quot;nt&quot;&gt;&amp;lt;/TimeZone&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;UserAccounts&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;AdministratorPassword&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;Value&amp;gt;&lt;/span&gt;YQBkAHMAZgBBAGQAbQBpAG4AaQBzAHQAcgBhAHQAbwByAFAAYQBzAHMAdwBvAHIAZAA=&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Value&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;PlainText&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/PlainText&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/AdministratorPassword&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/UserAccounts&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;RegisteredOrganization&amp;gt;&lt;/span&gt;Generic Organization&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RegisteredOrganization&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;RegisteredOwner&amp;gt;&lt;/span&gt;Generic Owner&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RegisteredOwner&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is all well and good but it’s still only get’s us the first step. To automate deployment we need to do more then bypass prompts and set a password.&lt;/p&gt;

&lt;h2 id=&quot;more-usefull-unattentxml&quot;&gt;More usefull Unattent.xml&lt;/h2&gt;

&lt;p&gt;Now we will set a few more items.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-PowerShell&quot;&gt;$param = @{
  AdminCredential = (Get-Credential) 
  UserAccount = (Get-Credential), (Get-Credential) 
  FirstBootScriptPath = 'C:\PsTemp\FirstBoot.ps1' 
  TimeZone = 'Central Standard Time' 
  RegisteredOwner = 'Employee'
  RegisteredOrganization = 'Contoso'
  enableAdministrator = $true 
}
New-UnattendXml @param | 
get-content
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;specialize---deployment&quot;&gt;specialize :  Deployment&lt;/h3&gt;

&lt;p&gt;One thing to notice here is the amd64 component is still blank. The reason for this is 64bit OS’s will run the commands in both the 32 and 64bit sections.&lt;/p&gt;

&lt;p&gt;We have two commands in the RunSynchronous section. The first one enables the Administrator account. the second launches PowerShell with the script path we asked for.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-Deployment&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;amd64&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-Deployment&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x86&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;RunSynchronous&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;RunSynchronousCommand&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wcm:action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;add&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;Description&amp;gt;&lt;/span&gt;Enable Administrator&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Description&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;Order&amp;gt;&lt;/span&gt;1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Order&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;Path&amp;gt;&lt;/span&gt;net user administrator /active:yes&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Path&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/RunSynchronousCommand&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;RunSynchronousCommand&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wcm:action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;add&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;Description&amp;gt;&lt;/span&gt;PowerShell First boot script&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Description&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;Order&amp;gt;&lt;/span&gt;2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Order&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;Path&amp;gt;&lt;/span&gt;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -ExecutionPolicy Bypass -File &quot;C:\PsTemp\FirstBoot.ps1&quot;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Path&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/RunSynchronousCommand&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/RunSynchronous&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;oobesystem---shell-setup-1&quot;&gt;oobeSystem :  Shell Setup&lt;/h3&gt;

&lt;p&gt;The next section that is diferent is the shell setup. You will notice I set two additional user accounts. Remember that the passwords are encoded not encrypted. I also have entries to set the ownership.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-Shell-Setup&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;amd64&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;OOBE&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;HideEULAPage&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HideEULAPage&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;HideWirelessSetupInOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HideWirelessSetupInOOBE&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;NetworkLocation&amp;gt;&lt;/span&gt;Work&lt;span class=&quot;nt&quot;&gt;&amp;lt;/NetworkLocation&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ProtectYourPC&amp;gt;&lt;/span&gt;1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ProtectYourPC&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;SkipUserOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SkipUserOOBE&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;SkipMachineOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SkipMachineOOBE&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/OOBE&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;TimeZone&amp;gt;&lt;/span&gt;Central Standard Time&lt;span class=&quot;nt&quot;&gt;&amp;lt;/TimeZone&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;UserAccounts&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;AdministratorPassword&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;Value&amp;gt;&lt;/span&gt;UABAAHMAcwB3ADAAcgBkAEEAZABtAGkAbgBpAHMAdAByAGEAdABvAHIAUABhAHMAcwB3AG8AcgBkAA==&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Value&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;PlainText&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/PlainText&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/AdministratorPassword&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;LocalAccounts&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;LocalAccount&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wcm:action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;add&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Password&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;Value&amp;gt;&lt;/span&gt;UABAAHMAcwB3ADAAcgBkADEAMgAzAFAAYQBzAHMAdwBvAHIAZAA=&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Value&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;PlainText&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/PlainText&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Password&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;DisplayName&amp;gt;&lt;/span&gt;Don&lt;span class=&quot;nt&quot;&gt;&amp;lt;/DisplayName&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Group&amp;gt;&lt;/span&gt;Administrators&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Group&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Name&amp;gt;&lt;/span&gt;Don&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Name&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/LocalAccount&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;LocalAccount&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wcm:action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;add&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Password&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;Value&amp;gt;&lt;/span&gt;UABAAHMAcwB3ADAAcgBkADQANQA2AFAAYQBzAHMAdwBvAHIAZAA=&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Value&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;PlainText&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/PlainText&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Password&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;DisplayName&amp;gt;&lt;/span&gt;Mike&lt;span class=&quot;nt&quot;&gt;&amp;lt;/DisplayName&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Group&amp;gt;&lt;/span&gt;Administrators&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Group&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Name&amp;gt;&lt;/span&gt;Mike&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Name&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/LocalAccount&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/LocalAccounts&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/UserAccounts&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;RegisteredOrganization&amp;gt;&lt;/span&gt;Contoso&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RegisteredOrganization&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;RegisteredOwner&amp;gt;&lt;/span&gt;Employee&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RegisteredOwner&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Microsoft-Windows-Shell-Setup&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x86&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;31bf3856ad364e35&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;neutral&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;versionScope=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nonSxS&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;OOBE&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;HideEULAPage&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HideEULAPage&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;HideWirelessSetupInOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HideWirelessSetupInOOBE&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;NetworkLocation&amp;gt;&lt;/span&gt;Work&lt;span class=&quot;nt&quot;&gt;&amp;lt;/NetworkLocation&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ProtectYourPC&amp;gt;&lt;/span&gt;1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ProtectYourPC&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;SkipUserOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SkipUserOOBE&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;SkipMachineOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SkipMachineOOBE&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/OOBE&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;TimeZone&amp;gt;&lt;/span&gt;Central Standard Time&lt;span class=&quot;nt&quot;&gt;&amp;lt;/TimeZone&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;UserAccounts&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;AdministratorPassword&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;Value&amp;gt;&lt;/span&gt;UABAAHMAcwB3ADAAcgBkAEEAZABtAGkAbgBpAHMAdAByAGEAdABvAHIAUABhAHMAcwB3AG8AcgBkAA==&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Value&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;PlainText&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/PlainText&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/AdministratorPassword&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;LocalAccounts&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;LocalAccount&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wcm:action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;add&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Password&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;Value&amp;gt;&lt;/span&gt;UABAAHMAcwB3ADAAcgBkADEAMgAzAFAAYQBzAHMAdwBvAHIAZAA=&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Value&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;PlainText&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/PlainText&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Password&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;DisplayName&amp;gt;&lt;/span&gt;Don&lt;span class=&quot;nt&quot;&gt;&amp;lt;/DisplayName&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Group&amp;gt;&lt;/span&gt;Administrators&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Group&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Name&amp;gt;&lt;/span&gt;Don&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Name&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/LocalAccount&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;LocalAccount&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;wcm:action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;add&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Password&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;Value&amp;gt;&lt;/span&gt;UABAAHMAcwB3ADAAcgBkADQANQA2AFAAYQBzAHMAdwBvAHIAZAA=&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Value&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;PlainText&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/PlainText&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Password&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;DisplayName&amp;gt;&lt;/span&gt;Mike&lt;span class=&quot;nt&quot;&gt;&amp;lt;/DisplayName&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Group&amp;gt;&lt;/span&gt;Administrators&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Group&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Name&amp;gt;&lt;/span&gt;Mike&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Name&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/LocalAccount&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/LocalAccounts&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/UserAccounts&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;RegisteredOrganization&amp;gt;&lt;/span&gt;Contoso&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RegisteredOrganization&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;RegisteredOwner&amp;gt;&lt;/span&gt;Employee&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RegisteredOwner&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FirstLogonCommands&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;LogonCommands&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;puting-it-together&quot;&gt;Puting it together&lt;/h2&gt;

&lt;p&gt;New-UnattentXML returns a path object to the file created, and by default that is in $env:TEMP. so we will store the path in a variable and use it pluss the path to our FirstBoot script when creating the VHDX&lt;/p&gt;

&lt;h3 id=&quot;adding-the-unattend-and-script-file-when-creating-a-vhdx&quot;&gt;Adding the unattend and script file when creating a VHDX&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-PowerShell&quot;&gt;$UnattentParam = @{
  AdminCredential = (Get-Credential) 
  UserAccount = (Get-Credential), (Get-Credential) 
  FirstBootScriptPath = 'C:\PsTemp\FirstBoot.ps1' 
  TimeZone = 'Central Standard Time' 
  RegisteredOwner = 'Employee'
  RegisteredOrganization = 'Contoso'
  enableAdministrator = $true 
}
$UnattentPath = (New-UnattendXml @UnattentParam ).FullName

$FirstBootContent = {
  ## Do something Cool
}
 New-Item -Path &quot;G:\filesToInject\PsTemp&quot; -Name FirstBoot.ps1 -ItemType 'file' -Value $FirstBootContent
$ConverParm = @{
  Path = 'G:\vhd\2012r2_eval_Core.vhdx' 
  Size = 60gb 
  Dynamic = $true 
  DiskLayout = 'UEFI' 
  SourcePath = 'G:\iso\Srv2012r2Eval.ISO' 
  Index = 1 
  Feature = 'NetFx3'
  Unattend = $UnattentPath 
  filesToInject = 'G:\filesToInject\PsTemp'
}
 Convert-Wim2VHD @ConverParm -Verbose
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Below is part of the verbose output that covers Unattend and filesToInject&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VERBOSE: [Set-VHDPartition] [2012r2_eval_Core.vhdx] Windows Partition [3] : Adding files from G:\filesToInject
VERBOSE: [Set-VHDPartition] [2012r2_eval_Core.vhdx] Windows Partition [3] : Adding Unattend.xml (C:\Users\Blade_000\AppData\Local\Temp\djebkgrz\unattend.xml)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So now when this vhdx first boots it will process Unattend creating users and running our PowerShell script&lt;/p&gt;</content><author><name>David Jones</name><email>BladeFireLight@outlook.com</email></author><category term="VHDX" /><category term="WindowsUpdate" /><category term="WindowsUpdateTools" /><category term="Module" /><summary type="html">One of the time consuming steps to deploying new VMs is the time spend managing Images and and applying patches. I’m not big on Golden images. I tend to use a fully patched VHDX or VMDK and let DSC handle the configuration and software. This is not the fastest, and at scale you need to create more then one image based on what saves the most time. (IIS, SQL, Exchange, etc…).</summary></entry><entry><title type="html">Windows Image Tools \| VHDX Creation</title><link href="https://blog.bladefirelight.com/windowsimagetools/VHDXCreation/" rel="alternate" type="text/html" title="Windows Image Tools \| VHDX Creation" /><published>2016-08-21T16:48:59-05:00</published><updated>2016-08-21T16:48:59-05:00</updated><id>https://blog.bladefirelight.com/windowsimagetools/VHDXCreation</id><content type="html" xml:base="https://blog.bladefirelight.com/windowsimagetools/VHDXCreation/">&lt;p&gt;## Getting started&lt;/p&gt;

&lt;p&gt;To automate the creation of clean VM’s we need a clean diskimage. for that we will use Convert-Wim2VHD from WindowsImageTools&lt;/p&gt;

&lt;p&gt;Before you can create a VHDX your going to need a source. either a WIM or ISO. In tha lab that would usually be a trial version. For work, the iso from your licencing portal, or heaven forbid a physical CD.&lt;/p&gt;

&lt;p&gt;You can get an evaluation copy of windows from &lt;a href=&quot;https://www.microsoft.com/en-us/evalcenter&quot;&gt;TechNet Evaluation Center&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’m going to use a evaluation of 2012r2. I have it downloaded and saved to G:\ISO\Srv2012r2Eval.iso and i’m going to create a new vhdx in G:\vhd&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Convert-Wim2VHD -Path G:\vhd\2012r2_eval_Core.vhdx -Size 60gb -Dynamic -DiskLayout UEFI -SourcePath G:\iso\Srv2012r2Eval.ISO -Index 1 -Verbose
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Convert-Wim2VHD] : Overwrite partitions inside &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;G:\vhd\2012r2_eval_Core.vhdx] 
with content of &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;G:\iso\Srv2012r2Eval.ISO]
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Convert-Wim2VHD] : InitializeVHDPartitionParam
VERBOSE:
Name                           Value
----                           -----
Dynamic                        True
Path                           G:\vhd\2012r2_eval_Core.vhdx
DiskLayout                     UEFI
force                          True
Size                           64424509440

VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Convert-Wim2VHD] : SetVHDPartitionParam
VERBOSE:
Name                           Value
----                           -----
SourcePath                     G:\iso\Srv2012r2Eval.ISO
Path                           G:\vhd\2012r2_eval_Core.vhdx
FeatureSourceIndex             1
Index                          1
Force                          True
Confirm                        False

VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Convert-Wim2VHD] : ParametersToPass
VERBOSE:
Name                           Value
----                           -----
Verbose                        True

VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Initialize-VHDPartition] Create partition structure &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Bootable vhd&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; on 
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;G:\vhd\2012r2_eval_Core.vhdx]
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Initialize-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : Creating
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Initialize-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : @vhdParms
VERBOSE:
Name                           Value
----                           -----
Path                           G:\vhd\2012r2_eval_Core.vhdx
SizeBytes                      64424509440
Dynamic                        True
ErrorAction                    Stop
BlockSizeBytes                 1048576

VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Initialize-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : Mounting disk image
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Initialize-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : Initializing disk &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;5] as 
GPT
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Initialize-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : Clearing disk partitions to 
&lt;span class=&quot;nb&quot;&gt;start &lt;/span&gt;all over
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Initialize-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : EFI system : Creating 
partition of &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;209715200] bytes
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Initialize-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : EFI system : Formatting 
FAT32
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Initialize-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : EFI system : Setting system 
partition as ESP
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Initialize-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : MSR : Creating partition of 
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;134217728] bytes
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Initialize-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : Windows : Creating partition 
of &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;64078479360] bytes
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Initialize-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : Windows : Formatting volume 
NTFS
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Initialize-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : Dismounting disk image
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Set&lt;/span&gt;-VHDPartition] : Overwrite partitions inside &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;G:\vhd\2012r2_eval_Core.vhdx] 
with content of
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;G:\iso\Srv2012r2Eval.ISO]
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Set&lt;/span&gt;-VHDPartition] : Opening ISO &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Srv2012r2Eval.ISO]
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Set&lt;/span&gt;-VHDPartition] : Looking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;I:\sources\install.wim
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Set&lt;/span&gt;-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : Mounting disk image 
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;G:\vhd\2012r2_eval_Core.vhdx]
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Set&lt;/span&gt;-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : Munted as disknumber &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;5]
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Set&lt;/span&gt;-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : Partition Table
VERBOSE:
PartitionNumber DriveLetter        Size &lt;span class=&quot;nb&quot;&gt;Type&lt;/span&gt;
--------------- -----------        ---- ----
              1           J   209715200 System
              2               134217728 Reserved
              3           K 64078479360 Basic

VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Set&lt;/span&gt;-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] Windows Partition &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3] : Applying 
image &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I:\sources\install.wim] to &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;K:\] &lt;span class=&quot;k&quot;&gt;using &lt;/span&gt;Index &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1]
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Set&lt;/span&gt;-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : Disk Layout &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;UEFI]
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Set&lt;/span&gt;-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] System Partition &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1] : Running 
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;K:\Windows\System32\bcdboot.exe] -&amp;gt;
 K:\Windows /s J: /v /f UEFI
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Run-Executable] : Running &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;K:\Windows\System32\bcdboot.exe] 
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;K:\Windows /s J: /v /f UEFI]
VERBOSE:
Name                           Value
----                           -----
PassThru                       True
FilePath                       K:\Windows\System32\bcdboot.exe
ArgumentList                   &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;K:\Windows, /s J:, /v, /f UEFI&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
RedirectStandardError          C:\Users\BLADE_~1\AppData\Local\Temp\bcdboot.exe-Standard
Error.txt
NoNewWindow                    True
Wait                           True

RedirectStandardOutput         C:\Users\BLADE_~1\AppData\Local\Temp\bcdboot.exe-Standard
Output.txt
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Run-Executable] : &lt;span class=&quot;k&quot;&gt;Return &lt;/span&gt;code was &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0]
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Set&lt;/span&gt;-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : Removing Drive letters
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Set&lt;/span&gt;-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : Dismounting
VERBOSE: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Set&lt;/span&gt;-VHDPartition] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2012r2_eval_Core.vhdx] : Finished
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;server-with-a-gui-and-net-35&quot;&gt;Server with a GUI and .net 3.5&lt;/h2&gt;

&lt;p&gt;Lets say we need a VM with the Desktop and .Net 3.5 to run a legacy vendor app.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Convert-Wim2VHD -Path G:\vhd\2012r2_eval_gui.vhdx -Size 60gb -Dynamic -DiskLayout UEFI -SourcePath G:\iso\Srv2012r2Eval.ISO -Index 2 -Feature NetFx3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The -Feature command takes the feature names that would be understood by DISM, or Install-WindowsOptionalFeature&lt;/p&gt;

&lt;p&gt;Creating a VHDX is a good start, but we want to automate this. for that we need an Unatten.xml. I will cover that in the next blog&lt;/p&gt;</content><author><name>David Jones</name><email>BladeFireLight@outlook.com</email></author><category term="VHDX" /><category term="WindowsUpdate" /><category term="WindowsUpdateTools" /><category term="Module" /><summary type="html">One of the time consuming steps to deploying new VMs is the time spend managing Images and and applying patches. I’m not big on Golden images. I tend to use a fully patched VHDX or VMDK and let DSC handle the configuration and software. This is not the fastest, and at scale you need to create more then one image based on what saves the most time. (IIS, SQL, Exchange, etc…).</summary></entry><entry><title type="html">Windows Image Tools \| Overview</title><link href="https://blog.bladefirelight.com/windowsimagetools/windows-image-tools-overview/" rel="alternate" type="text/html" title="Windows Image Tools \| Overview" /><published>2016-03-16T16:48:59-05:00</published><updated>2016-03-16T16:48:59-05:00</updated><id>https://blog.bladefirelight.com/windowsimagetools/windows-image-tools-overview</id><content type="html" xml:base="https://blog.bladefirelight.com/windowsimagetools/windows-image-tools-overview/">&lt;h2 id=&quot;the-problem&quot;&gt;The problem&lt;/h2&gt;

&lt;p&gt;One of the time consuming steps to deploying new VMs is the time spend managing Images and and applying patches. I’m not big on Golden images. I tend to use a fully patched VHDX or VMDK  and let DSC handle the configuration and software. This is not the fastest, and at scale you need to create more then one image based on what saves the most time.  (IIS, SQL, Exchange, etc…).&lt;/p&gt;

&lt;h2 id=&quot;what-to-do-about-it&quot;&gt;What to do about it&lt;/h2&gt;

&lt;p&gt;I have spend some time putting together a number of scripts to automate this, but after the release of windows 10 and it’s built in access to the galaxy I decided to look at updating and packaging my script into something portable and share it.&lt;/p&gt;

&lt;h3 id=&quot;why-a-module-why-not-a-script&quot;&gt;Why a Module, why not a script?&lt;/h3&gt;

&lt;p&gt;Well scripts are great for automating a process, but not the best when you want to customize for your own process. Say you use a script on the &lt;a href=&quot;https://www.powershellgallery.com/&quot;&gt;PowerShell Gallery&lt;/a&gt; and have customized it to fit your environment and business process. Then their is a bug fix posted to the gallery. You get the fun of adapting the changes into your modified code. This is time consuming, and the reason so many thing in production remain outdated and buggy. But if your using a customized controller script&lt;sup id=&quot;fnref:ControlerSsript&quot;&gt;&lt;a href=&quot;#fn:ControlerSsript&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; that relies on a module function, being able to use the newer release from the PowerShell Gallery is less painful.&lt;/p&gt;

&lt;p&gt;For that reason I have chosen to use a module and include a function that creates an example controller script.&lt;/p&gt;

&lt;h2 id=&quot;functions-included-in-windowsimagetools&quot;&gt;Functions included in WindowsImageTools&lt;/h2&gt;

&lt;p&gt;Functions cover three different areas, Creating VHDX, Manipulating them, and Updates.&lt;/p&gt;

&lt;h3 id=&quot;create-vhdx&quot;&gt;Create VHDX&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Initialize-VHDPartition
    &lt;ul&gt;
      &lt;li&gt;Create a VHD(x) with the partitions structure appropriate for the target generation of a VM&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Set-VHDPartition
    &lt;ul&gt;
      &lt;li&gt;Populate the VHD(x) partitions with the content of an ISO or WIM&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Convert-Wim2VHD
    &lt;ul&gt;
      &lt;li&gt;Wrapper combining Initialize-VHDPartition and Set-VHDPartition in a single function&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;New-UnattendXml
    &lt;ul&gt;
      &lt;li&gt;Create an Unattent.xml to silently setup windows&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-with-vhdx&quot;&gt;Work with VHDX&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Get-VhdPartitionStyle
    &lt;ul&gt;
      &lt;li&gt;Returns GPT&lt;sup id=&quot;fnref:GPT&quot;&gt;&lt;a href=&quot;#fn:GPT&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; or MBR&lt;sup id=&quot;fnref:MBR&quot;&gt;&lt;a href=&quot;#fn:MBR&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Mount-VhdAndRunBlock
    &lt;ul&gt;
      &lt;li&gt;Mounts a VHD(x) sets the letter of the first mount point to $driveLeter and invokes a script block. useful for manipulating  files inside a VHD&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Invoke-CreateVmRunAndWait
    &lt;ul&gt;
      &lt;li&gt;Created a VM attached the VHD to it and waits for it to stop. Used for running boot time scripts that shut down when finished.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;update-vhdx&quot;&gt;Update VHDX&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;New-WindowsImageToolsExample
    &lt;ul&gt;
      &lt;li&gt;Creates an example folder structure and example controller scripts&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Get-UpdateConfig
    &lt;ul&gt;
      &lt;li&gt;Gets the update configuration stored in the update folders. Contains VM Switch, and IP addresses needed to access the internet when running updates.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Set-UpdateConfig
    &lt;ul&gt;
      &lt;li&gt;Change settings in the update configuration&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Add-UpdateImage
    &lt;ul&gt;
      &lt;li&gt;Uses Convert-Wim2VHD and New-UnattendXml to prep a VHDX for updating&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Update-WindowsImageWMF
    &lt;ul&gt;
      &lt;li&gt;Update VHDX to WMF 4 or WMF 5&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Invoke-WindowsImageUpdate
    &lt;ul&gt;
      &lt;li&gt;For one VHDX or all VHD’s in update folder, run windows update and output WIM and optional VHDX&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:ControlerSsript&quot;&gt;
      &lt;p&gt;A script that is specific to a business process &lt;a href=&quot;#fnref:ControlerSsript&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:GPT&quot;&gt;
      &lt;p&gt;GUID Partition Table. Used for Generation 2 and UEFI. will contain MSR, UEFI and Primary partition, may include options Recovery Tools and Recovery Image partitions &lt;a href=&quot;#fnref:GPT&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:MBR&quot;&gt;
      &lt;p&gt;Master Boot Record. Used for Generation 1 and legacy BIOS. Will use one Primary partition &lt;a href=&quot;#fnref:MBR&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>David Jones</name><email>BladeFireLight@outlook.com</email></author><category term="VHDX" /><category term="WindowsUpdate" /><category term="WindowsUpdateTools" /><category term="Module" /><summary type="html">One of the time consuming steps to deploying new VMs is the time spend managing Images and and applying patches. I’m not big on Golden images. I tend to use a fully patched VHDX or VMDK and let DSC handle the configuration and software. This is not the fastest, and at scale you need to create more then one image based on what saves the most time. (IIS, SQL, Exchange, etc…).</summary></entry><entry><title type="html">Shaving the Yak, Leads Me to Create New Module WindowsImageTools</title><link href="https://blog.bladefirelight.com/shaving-the-yak-leads-me-to-create-new-module-windowsimagetools/" rel="alternate" type="text/html" title="Shaving the Yak, Leads Me to Create New Module WindowsImageTools" /><published>2015-09-29T00:00:00-05:00</published><updated>2015-09-29T00:00:00-05:00</updated><id>https://blog.bladefirelight.com/shaving-the-yak-leads-me-to-create-new-module-windowsimagetools</id><content type="html" xml:base="https://blog.bladefirelight.com/shaving-the-yak-leads-me-to-create-new-module-windowsimagetools/">&lt;h2 id=&quot;my-yak-needs-shaving&quot;&gt;My Yak needs shaving.&lt;/h2&gt;

&lt;p&gt;If your not familiar with the term.&lt;/p&gt;

&lt;p&gt;http://www.hanselman.com/blog/YakShavingDefinedIllGetThatDoneAsSoonAsIShaveThisYak.aspx&lt;/p&gt;

&lt;p&gt;It’s been quite a journey since my last post.&lt;/p&gt;

&lt;p&gt;Windows 10 came out, and Convert-WindowsImage.ps1 was upgraded (braking my scripts I blogged about this summer) and Server 2016 Preview 3 was released.&lt;/p&gt;

&lt;p&gt;Looking at the Nano folder on Preview 3 they are using a WIM and Convert-WindowsImage.ps1to create a VHDX. Good move Microsoft.&lt;/p&gt;

&lt;p&gt;Now for the bad part.&lt;/p&gt;

&lt;p&gt;Convert-WindowImage.ps1 is buggy, and not a module. But Microsoft is working hart to fix this. Not being one to wait. I decided to take the functionality I need and re-work the whole process as a module. (and found some underlying bugs in PowerShell in the process )  The results of my effort is documented below.&lt;/p&gt;

&lt;p&gt;As for Windows 10.&lt;/p&gt;

&lt;p&gt;There are a number of changes to DSC that have broken all my production configuration scripts. And Configurations created on Windows10 or WMF 5 preview have bugs when using depends on, that cause the LCM on 2012R2 to hang.&lt;/p&gt;

&lt;p&gt;For Production this is a show stopper, but I’m already working to separate out the configuration’s based on target OS.&lt;/p&gt;

&lt;h2 id=&quot;windowsimagetools&quot;&gt;WindowsImageTools&lt;/h2&gt;

&lt;p&gt;Microsoft recently moved Convert-WindowsImage over to GitHub and added some nice features, but it’s still a script, not a module. They also nicely added an MIT licence to that repo. So taking advantage of that I started my own project based on that code. I’m calling it WindowsImageTools&lt;/p&gt;

&lt;p&gt;So far there are four exported functions.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Initialize-VHDPartition
    &lt;ol&gt;
      &lt;li&gt;Create a VHD with correct partition for BIOS or UEFI with or without Recovery tools/image&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Set-VHDPartition
    &lt;ol&gt;
      &lt;li&gt;take an ISO or WIM and populate the VHD. This detects the layout and acts accordingly.&lt;/li&gt;
      &lt;li&gt;It also can add drivers, enable features, inject unattend.xml and inject additional files or folders&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Convert-Wim2VHD
    &lt;ol&gt;
      &lt;li&gt;This is a wrapper functions around the first two&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;New-UnattendXml
    &lt;ol&gt;
      &lt;li&gt;Create an Unattend.xml that works with both 32 and 64 bit in a single file&lt;/li&gt;
      &lt;li&gt;Sets the admin password and autologin count&lt;/li&gt;
      &lt;li&gt;Creates then deletes a second user (for Windows7)&lt;/li&gt;
      &lt;li&gt;Sets TimeZone&lt;/li&gt;
      &lt;li&gt;Starts a PowerShell script to bootstrap the system configuration&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That last one took quite some work to figure out. It only fully works with Volume media because it does not set the license key.&lt;/p&gt;

&lt;p&gt;I also discovered that 64bit windows will run both the 32bit sections for adding users and running scripts, but not the part for skipping licensing and autologin. This is true from win7 forward. If your not familiar with Unattend.xml those parts are all under the same section in the xml.&lt;/p&gt;

&lt;p&gt;If you want to give it a spin it’s &lt;a href=&quot;https://www.powershellgallery.com/packages/WindowsImageTools/&quot;&gt;available at the PowerShell Gallery&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;onward&quot;&gt;Onward&lt;/h2&gt;

&lt;p&gt;So equipped with these tools i’m now going to reword my auto patching and WIM creation script. and add that into the module.&lt;/p&gt;</content><author><name>David Jones</name><email>BladeFireLight@outlook.com</email></author><category term="Rant" /><summary type="html">My Yak needs shaving. If your not familiar with the term. http://www.hanselman.com/blog/YakShavingDefinedIllGetThatDoneAsSoonAsIShaveThisYak.aspx It’s been quite a journey since my last post. Windows 10 came out, and Convert-WindowsImage.ps1 was upgraded (braking my scripts I blogged about this summer) and Server 2016 Preview 3 was released. Looking at the Nano folder on Preview 3 they are using a WIM and Convert-WindowsImage.ps1to create a VHDX. Good move Microsoft. Now for the bad part. Convert-WindowImage.ps1 is buggy, and not a module. But Microsoft is working hart to fix this. Not being one to wait. I decided to take the functionality I need and re-work the whole process as a module. (and found some underlying bugs in PowerShell in the process ) The results of my effort is documented below. As for Windows 10. There are a number of changes to DSC that have broken all my production configuration scripts. And Configurations created on Windows10 or WMF 5 preview have bugs when using depends on, that cause the LCM on 2012R2 to hang. For Production this is a show stopper, but I’m already working to separate out the configuration’s based on target OS. WindowsImageTools Microsoft recently moved Convert-WindowsImage over to GitHub and added some nice features, but it’s still a script, not a module. They also nicely added an MIT licence to that repo. So taking advantage of that I started my own project based on that code. I’m calling it WindowsImageTools So far there are four exported functions. Initialize-VHDPartition Create a VHD with correct partition for BIOS or UEFI with or without Recovery tools/image Set-VHDPartition take an ISO or WIM and populate the VHD. This detects the layout and acts accordingly. It also can add drivers, enable features, inject unattend.xml and inject additional files or folders Convert-Wim2VHD This is a wrapper functions around the first two New-UnattendXml Create an Unattend.xml that works with both 32 and 64 bit in a single file Sets the admin password and autologin count Creates then deletes a second user (for Windows7) Sets TimeZone Starts a PowerShell script to bootstrap the system configuration That last one took quite some work to figure out. It only fully works with Volume media because it does not set the license key. I also discovered that 64bit windows will run both the 32bit sections for adding users and running scripts, but not the part for skipping licensing and autologin. This is true from win7 forward. If your not familiar with Unattend.xml those parts are all under the same section in the xml. If you want to give it a spin it’s available at the PowerShell Gallery Onward So equipped with these tools i’m now going to reword my auto patching and WIM creation script. and add that into the module.</summary></entry></feed>